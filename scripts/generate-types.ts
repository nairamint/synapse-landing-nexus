import { FromSchema } from 'json-schema-to-ts';
import * as fs from 'fs';
import * as path from 'path';

const schemasDir = path.join(process.cwd(), 'src/schemas/fire');
const outputFile = path.join(process.cwd(), 'src/types/regulatory.ts');

// Read all schema files
const schemaFiles = fs.readdirSync(schemasDir).filter(file => file.endsWith('.json'));

let output = `// Generated types from FIRE schemas
// Do not edit this file directly - it is generated from JSON schemas

`;

for (const file of schemaFiles) {
  const schema = JSON.parse(fs.readFileSync(path.join(schemasDir, file), 'utf-8'));
  const typeName = file.replace('.json', '').split('_').map(s => s.charAt(0).toUpperCase() + s.slice(1)).join('');
  
  output += `export type ${typeName} = FromSchema<${JSON.stringify(schema, null, 2)}>;\n\n`;
}

fs.writeFileSync(outputFile, output);
console.log('Types generated successfully!');
