name: Pre-Beta Validation CI/CD

on:
  push:
    branches: [main, develop, pre-beta]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:
    inputs:
      test_suite:
        description: 'Test suite to run'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - pre-beta
          - security
          - performance
          - accessibility

jobs:
  pre-beta-validation:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        browser: [chromium, firefox, webkit]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run Pre-Beta Validation Tests
        run: |
          if [ "${{ github.event.inputs.test_suite }}" = "all" ] || [ "${{ github.event.inputs.test_suite }}" = "" ]; then
            npm run test:all
          elif [ "${{ github.event.inputs.test_suite }}" = "pre-beta" ]; then
            npm run test:pre-beta
          elif [ "${{ github.event.inputs.test_suite }}" = "security" ]; then
            npm run test:security
          elif [ "${{ github.event.inputs.test_suite }}" = "performance" ]; then
            npm run test:performance
          elif [ "${{ github.event.inputs.test_suite }}" = "accessibility" ]; then
            npm run test:accessibility
          fi
        env:
          BASE_URL: ${{ secrets.TEST_BASE_URL || 'http://localhost:3000' }}

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report-${{ matrix.browser }}
          path: playwright-report/
          retention-days: 30

      - name: Upload test screenshots
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: playwright-screenshots-${{ matrix.browser }}
          path: test-results/
          retention-days: 30

  security-audit:
    runs-on: ubuntu-latest
    needs: pre-beta-validation

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run security audit
        run: npm audit --audit-level=moderate

      - name: Run Snyk security scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high

  performance-testing:
    runs-on: ubuntu-latest
    needs: pre-beta-validation

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Start development server
        run: npm run dev &

      - name: Wait for server
        run: npx wait-on http://localhost:5173

      - name: Run Lighthouse performance test
        run: npm run test:performance

      - name: Upload Lighthouse report
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-report
          path: lighthouse-report.json
          retention-days: 30

  accessibility-testing:
    runs-on: ubuntu-latest
    needs: pre-beta-validation

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run accessibility tests
        run: npm run test:accessibility
        env:
          BASE_URL: ${{ secrets.TEST_BASE_URL || 'http://localhost:3000' }}

  deployment-readiness:
    runs-on: ubuntu-latest
    needs: [pre-beta-validation, security-audit, performance-testing, accessibility-testing]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Type check
        run: npm run type-check

      - name: Lint check
        run: npm run lint

      - name: Format check
        run: npm run format:check

      - name: Create deployment readiness report
        run: |
          echo "# Pre-Beta Validation Report" > deployment-readiness-report.md
          echo "## Test Results" >> deployment-readiness-report.md
          echo "- Pre-Beta Validation: ${{ needs.pre-beta-validation.result }}" >> deployment-readiness-report.md
          echo "- Security Audit: ${{ needs.security-audit.result }}" >> deployment-readiness-report.md
          echo "- Performance Testing: ${{ needs.performance-testing.result }}" >> deployment-readiness-report.md
          echo "- Accessibility Testing: ${{ needs.accessibility-testing.result }}" >> deployment-readiness-report.md
          echo "" >> deployment-readiness-report.md
          echo "## Deployment Status" >> deployment-readiness-report.md
          if [ "${{ needs.pre-beta-validation.result }}" = "success" ] && [ "${{ needs.security-audit.result }}" = "success" ] && [ "${{ needs.performance-testing.result }}" = "success" ] && [ "${{ needs.accessibility-testing.result }}" = "success" ]; then
            echo "✅ **READY FOR BETA DEPLOYMENT**" >> deployment-readiness-report.md
          else
            echo "❌ **NOT READY FOR BETA DEPLOYMENT**" >> deployment-readiness-report.md
            echo "Please fix the failing tests before proceeding." >> deployment-readiness-report.md
          fi

      - name: Upload deployment readiness report
        uses: actions/upload-artifact@v4
        with:
          name: deployment-readiness-report
          path: deployment-readiness-report.md
          retention-days: 30

  notify-team:
    runs-on: ubuntu-latest
    needs: deployment-readiness
    if: always()

    steps:
      - name: Notify team of results
        run: |
          if [ "${{ needs.deployment-readiness.result }}" = "success" ]; then
            echo "🎉 Pre-Beta validation completed successfully! Application is ready for beta deployment."
          else
            echo "⚠️ Pre-Beta validation failed. Please review the test results and fix any issues."
          fi
