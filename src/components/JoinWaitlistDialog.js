import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { useState } from 'react';
import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogDescription } from '@/components/ui/dialog';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Textarea } from '@/components/ui/textarea';
import { toast } from 'sonner';
import { Loader2 } from 'lucide-react';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
const JoinWaitlistDialog = ({ open, onOpenChange }) => {
    const [email, setEmail] = useState('');
    const [isSubmitting, setIsSubmitting] = useState(false);
    const handleEmailSignup = (e) => {
        e.preventDefault();
        setIsSubmitting(true);
        // Simulate API call
        setTimeout(() => {
            setIsSubmitting(false);
            toast.success("You've been added to our waitlist!");
            onOpenChange(false);
            setEmail('');
        }, 1500);
    };
    return (_jsx(Dialog, { open: open, onOpenChange: onOpenChange, children: _jsxs(DialogContent, { className: 'sm:max-w-lg max-h-[90vh] overflow-y-auto', children: [_jsxs(DialogHeader, { children: [_jsx(DialogTitle, { className: 'text-xl', children: "Join the Synapses Waitlist" }), _jsx(DialogDescription, { children: "Get early access to our Governance, Risk, and Compliance platform and shape the future of GRC." })] }), _jsx("div", { className: 'grid gap-6 py-4', children: _jsxs("form", { onSubmit: handleEmailSignup, className: 'space-y-4', children: [_jsxs("div", { className: 'grid grid-cols-1 sm:grid-cols-2 gap-4', children: [_jsxs("div", { className: 'grid gap-2', children: [_jsx(Label, { htmlFor: 'name', children: "Full Name" }), _jsx(Input, { id: 'name', type: 'text', placeholder: 'Your name', required: true })] }), _jsxs("div", { className: 'grid gap-2', children: [_jsx(Label, { htmlFor: 'email', children: "Work Email" }), _jsx(Input, { id: 'email', type: 'email', placeholder: 'you@company.com', value: email, onChange: e => setEmail(e.target.value), required: true })] }), _jsxs("div", { className: 'grid gap-2', children: [_jsx(Label, { htmlFor: 'title', children: "Job Title" }), _jsx(Input, { id: 'title', type: 'text', placeholder: 'Your position', required: true })] }), _jsxs("div", { className: 'grid gap-2', children: [_jsx(Label, { htmlFor: 'country', children: "Country" }), _jsxs(Select, { children: [_jsx(SelectTrigger, { id: 'country', children: _jsx(SelectValue, { placeholder: 'Select country' }) }), _jsxs(SelectContent, { children: [_jsx(SelectItem, { value: 'us', children: "United States" }), _jsx(SelectItem, { value: 'uk', children: "United Kingdom" }), _jsx(SelectItem, { value: 'ca', children: "Canada" }), _jsx(SelectItem, { value: 'au', children: "Australia" }), _jsx(SelectItem, { value: 'de', children: "Germany" }), _jsx(SelectItem, { value: 'fr', children: "France" }), _jsx(SelectItem, { value: 'sg', children: "Singapore" }), _jsx(SelectItem, { value: 'other', children: "Other" })] })] })] }), _jsxs("div", { className: 'grid gap-2 sm:col-span-2', children: [_jsx(Label, { htmlFor: 'company', children: "Company" }), _jsx(Input, { id: 'company', type: 'text', placeholder: 'Your organization', required: true })] })] }), _jsxs("div", { className: 'mt-6 space-y-4', children: [_jsxs("div", { className: 'grid gap-2', children: [_jsx(Label, { htmlFor: 'missing-capability', className: 'text-sm font-medium', children: "What's one capability, workflow, or tool you believe is missing from the current compliance landscape?" }), _jsx("p", { className: 'text-xs text-gray-500', children: "Think about your day-to-day\u2014what would make your work significantly more efficient, insightful, or impactful?" }), _jsx(Textarea, { id: 'missing-capability', placeholder: 'Share your thoughts...', className: 'min-h-24', required: true })] }), _jsxs("div", { className: 'grid gap-2', children: [_jsx(Label, { htmlFor: 'limiting-tools', className: 'text-sm font-medium', children: "Are there any existing tools or platforms you've found limiting in your compliance work? If so, what challenges have you experienced?" }), _jsx("p", { className: 'text-xs text-gray-500', children: "Your perspective will help us understand where existing solutions may fall short\u2014and where new value can be created." }), _jsx(Textarea, { id: 'limiting-tools', placeholder: 'Share your experiences...', className: 'min-h-24', required: true })] }), _jsxs("div", { className: 'grid gap-2', children: [_jsx(Label, { htmlFor: 'engagement', className: 'text-sm font-medium', children: "How do you currently engage with platforms like LinkedIn, GRC forums, or associations to stay informed, upskill, or solve regulatory challenges?" }), _jsx("p", { className: 'text-xs text-gray-500', children: "We'd love to learn how you gather insights, build networks, or contribute to the professional community." }), _jsx(Textarea, { id: 'engagement', placeholder: 'Share your approaches...', className: 'min-h-24', required: true })] })] }), _jsx(Button, { type: 'submit', className: 'w-full', disabled: isSubmitting || !email, children: isSubmitting ? (_jsxs(_Fragment, { children: [_jsx(Loader2, { className: 'mr-2 h-4 w-4 animate-spin' }), "Please wait"] })) : ('Join Waitlist') })] }) }), _jsxs("div", { className: 'mt-4 text-sm text-gray-500 text-center', children: ["By joining, you agree to our", ' ', _jsx("a", { href: '/legal/terms', className: 'text-blue-600 hover:underline', children: "Terms of Service" }), ' ', "and", ' ', _jsx("a", { href: '/legal/privacy', className: 'text-blue-600 hover:underline', children: "Privacy Policy" })] })] }) }));
};
export default JoinWaitlistDialog;
