<<<<<<< HEAD
// Generated types from FIRE schemas
// Do not edit this file directly - it is generated from JSON schemas

export type Account = FromSchema<{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Account Schema",
  "description": "An Account represents a financial account that describes the funds that a customer has entrusted to a financial institution in the form of deposits or credit balances.",
  "type": "object",
  "properties": {
    "id": {
      "description": "The unique identifier for the record within the firm.",
      "type": "string"
    },
    "date": {
      "description": "The observation or value date for the data in this object. Formatted as YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601.",
      "type": "string",
      "format": "date-time"
    },
    "acc_fv_change_before_taxes": {
      "description": "Accumulated change in fair value before taxes.",
      "type": "integer",
      "monetary": true
    },
    "accounting_treatment": {
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/common.json#/accounting_treatment"
    },
    "accrued_interest": {
      "description": "The accrued interest since the last payment date and due at the next payment date. Monetary type represented as a naturally positive integer number of cents/pence.",
      "type": "integer",
      "monetary": true
    },
    "arrears_balance": {
      "description": "The balance of the capital amount that is considered to be in arrears (for overdrafts/credit cards). Monetary type represented as a naturally positive integer number of cents/pence.",
      "type": "integer",
      "monetary": true
    },
    "asset_liability": {
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/common.json#/asset_liability"
    },
    "balance": {
      "description": "The contractual balance on the date and in the currency given. Monetary type represented as a naturally positive integer number of cents/pence.",
      "type": "integer",
      "monetary": true
    },
    "base_rate": {
      "description": "The base rate represents the basis of the rate on the balance at the given date as agreed in the terms of the account.",
      "type": "string",
      "enum": [
        "FDTR",
        "UKBRBASE",
        "ZERO"
      ]
    },
    "behavioral_curve_id": {
      "description": "The unique identifier for the behavioral curve used by the financial institution.",
      "type": "string"
    },
    "behavioral_end_date": {
      "description": "Behavioral end date (as opposed to contractual). YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601",
      "type": "string",
      "format": "date-time"
    },
    "break_dates": {
      "description": "Dates where this contract can be broken (by either party). Formatted as YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601.",
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "string",
        "format": "date-time"
      }
    },
    "call_dates": {
      "description": "Dates where this contract can be called (by the customer). Formatted as YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601.",
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "string",
        "format": "date-time"
      }
    },
    "capital_tier": {
      "description": "The capital tiers based on own funds requirements.",
      "type": "string",
      "enum": [
        "add_tier_1",
        "anc_tier_2",
        "anc_tier_3",
        "at1_grandfathered",
        "bas_tier_2",
        "bas_tier_3",
        "ce_tier_1",
        "cet1_grandfathered",
        "t2_grandfathered",
        "tier_1",
        "tier_2",
        "tier_3"
      ]
    },
    "ccf": {
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/common.json#/ccf"
    },
    "cost_center_code": {
      "description": "The organizational unit or sub-unit to which costs/profits are booked.",
      "type": "string"
    },
    "count": {
      "description": "Describes the number of accounts aggregated into a single row.",
      "type": "integer",
      "minimum": 1
    },
    "country_code": {
      "description": "Two-letter country code for account location/jurisdiction. In accordance with ISO 3166-1.",
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/common.json#/country_code"
    },
    "cr_approach": {
      "description": "Specifies the approved credit risk rwa calculation approach to be applied to the exposure.",
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/common.json#/cr_approach"
    },
    "currency_code": {
      "description": "Actual currency of the Account in accordance with ISO 4217 standards. It should be consistent with balance, accrued_interest, guarantee_amount and other monetary amounts.",
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/common.json#/currency_code"
    },
    "customer_id": {
      "description": "The unique identifier used by the financial institution to identify the customer that owns the account.",
      "type": "string"
    },
    "day_count_convention": {
      "description": "The standardised methodology for calculating the number of days between two dates. It is used to calculate the amount of accrued interest or the present value.",
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/common.json#/day_count_convention"
    },
    "default_date": {
      "description": "Date of default.",
      "type": "string",
      "format": "date-time"
    },
    "ead": {
      "description": "The EAD field allows users to input monetary exposure-at-default values across the loan's lifecycle. Upon default, this field must be updated to reflect the final realised EAD value — that is, the actual exposure outstanding at the moment of default.",
      "type": "integer",
      "monetary": true
    },
    "ead_irb_ec": {
      "description": "The expected gross dollar exposure for each facility upon a borrower's default as determined by internal ratings-based approach. This value is used in economic capital calculations.",
      "type": "integer",
      "monetary": true
    },
    "economic_loss": {
      "description": "The definition of loss, used in estimating Loss Given Default for the reporting segment. When measuring economic loss, as opposed to accounting loss",
      "monetary": true,
      "type": "integer"
    },
    "encumbrance_amount": {
      "description": "The amount of the account that is encumbered by potential future commitments or legal liabilities. Monetary type represented as a naturally positive integer number of cents/pence.",
      "type": "integer",
      "minimum": 0,
      "monetary": true
    },
    "encumbrance_type": {
      "description": "The type of the encumbrance causing the encumbrance_amount.",
      "type": "string",
      "enum": [
        "covered_bond",
        "derivative",
        "none",
        "other",
        "repo"
      ]
    },
    "end_date": {
      "description": "The end or maturity date of the account. Format should be YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601",
      "type": "string",
      "format": "date-time"
    },
    "facility_id": {
      "description": "The code assigned by the financial institution to identify a facility.",
      "type": "string"
    },
    "first_arrears_date": {
      "description": "The first date on which this account was in arrears.",
      "type": "string",
      "format": "date-time"
    },
    "first_payment_date": {
      "description": "The first payment date for interest payments.",
      "type": "string",
      "format": "date-time"
    },
    "forbearance_date": {
      "description": "The date on which the first forbearance measure was granted to this product.  Format should be YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601",
      "type": "string",
      "format": "date-time"
    },
    "fraud_loss": {
      "description": "The total value of accounting losses incurred by the Financial Institution due to fraudulent activities within the reporting segment.",
      "type": "integer",
      "monetary": true
    },
    "frr_id": {
      "description": "The internal facility risk rating assigned to a facility based on its specific risk characteristics, including collateral and seniority.",
      "type": "string"
    },
    "fvh_level": {
      "description": "Fair value hierarchy category according to IFRS 13.93 (b)",
      "type": "integer",
      "minimum": 1,
      "maximum": 3
    },
    "guarantee_amount": {
      "description": "The amount of the account that is guaranteed under a Government Deposit Guarantee Scheme. Monetary type represented as a naturally positive integer number of cents/pence.",
      "type": "integer",
      "minimum": 0,
      "monetary": true
    },
    "guarantee_scheme": {
      "description": "The Government Deposit Scheme scheme under which the guarantee_amount is guaranteed.",
      "type": "string",
      "enum": [
        "be_pf",
        "bg_dif",
        "ca_cdic",
        "cy_dps",
        "cz_dif",
        "de_edb",
        "de_edo",
        "de_edw",
        "dk_gdfi",
        "ee_dgs",
        "es_fgd",
        "fi_dgf",
        "fr_fdg",
        "gb_fscs",
        "gr_dgs",
        "hk_dps",
        "hr_di",
        "hu_ndif",
        "ie_dgs",
        "it_fitd",
        "lt_vi",
        "lu_fgdl",
        "lv_dgf",
        "mt_dcs",
        "nl_dgs",
        "pl_bfg",
        "pt_fgd",
        "ro_fgdb",
        "se_ndo",
        "si_dgs",
        "sk_dpf",
        "us_fdic"
      ]
    },
    "impairment_amount": {
      "description": "The impairment amount is the allowance set aside by the firm that accounts for the event that the asset becomes impaired in the future.",
      "type": "integer",
      "minimum": 0,
      "monetary": true
    },
    "impairment_date": {
      "description": "The date upon which the product became considered impaired. Format should be YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601",
      "type": "string",
      "format": "date-time"
    },
    "impairment_status": {
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/common.json#/impairment_status"
    },
    "impairment_type": {
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/common.json#/impairment_type"
    },
    "insolvency_rank": {
      "description": "The insolvency ranking as per the national legal framework of the reporting institution.",
      "type": "integer",
      "minimum": 1
    },
    "interest_repayment_frequency": {
      "description": "Repayment frequency of the interest.",
      "type": "string",
      "enum": [
        "daily",
        "weekly",
        "bi_weekly",
        "monthly",
        "bi_monthly",
        "quarterly",
        "semi_annually",
        "annually",
        "at_maturity",
        "biennially",
        "sesquiennially"
      ]
    },
    "last_drawdown_date": {
      "description": "The last date on which a drawdown was made on this account (overdraft).",
      "type": "string",
      "format": "date-time"
    },
    "last_payment_date": {
      "description": "The final payment date for interest payments, often coincides with end_date.",
      "type": "string",
      "format": "date-time"
    },
    "last_recovery_date": {
      "description": "Date of most recent recovery in the reporting quarter.",
      "type": "string",
      "format": "date-time"
    },
    "last_write_off_date": {
      "description": "Date of Financial Institution's most recent Write Off in the reporting quarter.",
      "type": "string",
      "format": "date-time"
    },
    "ledger_code": {
      "description": "The internal ledger code or line item name.",
      "type": "string"
    },
    "lgd_floored": {
      "description": "The final LGD value after the relevant floors have been applied. To be used in the IRB RWA calculations.",
      "type": "number",
      "minimum": 0,
      "maximum": 1
    },
    "lgd_irb": {
      "description": "The loss given default as determined by internal ratings-based approach. Expressed as a percentage between 0 and 1. This value is used in regulatory capital calculations.",
      "type": "number",
      "minimum": 0,
      "maximum": 1
    },
    "lgd_irb_ec": {
      "description": "The loss given default as determined by internal ratings-based approach. Expressed as a percentage between 0 and 1. This value is used in economic capital calculations.",
      "type": "number",
      "minimum": 0,
      "maximum": 1
    },
    "limit_amount": {
      "description": "The minimum balance the customer can go overdrawn in their account.",
      "type": "integer",
      "monetary": true
    },
    "minimum_balance": {
      "description": "Indicates the minimum balance of each account within the aggregate. Monetary type represented as a naturally positive integer number of cents/pence.",
      "type": "integer",
      "monetary": true
    },
    "minimum_balance_eur": {
      "description": "Indicates the minimum balance, in Euros, of each account within the aggregate. Monetary type represented as a naturally positive integer number of cents/pence.",
      "type": "integer",
      "monetary": true
    },
    "mtd_deposits": {
      "description": "Month to date amount deposited within the account as a naturally positive integer number of cents/pence.",
      "type": "integer",
      "monetary": true
    },
    "mtd_interest_paid": {
      "description": "Month to date interest added to account as a naturally positive integer number of cents/pence.",
      "type": "integer",
      "monetary": true
    },
    "mtd_withdrawals": {
      "description": "Month to date amount withdrawn from the account as a naturally positive integer number of cents/pence.",
      "type": "integer",
      "monetary": true
    },
    "next_payment_date": {
      "description": "The next date at which interest will be paid or accrued_interest balance returned to zero.",
      "type": "string",
      "format": "date-time"
    },
    "next_repricing_date": {
      "description": "The date on which the interest rate of the account will be re-calculated. YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601.",
      "type": "string",
      "format": "date-time"
    },
    "next_withdrawal_date": {
      "description": "The next date at which customer is allowed to withdraw money from this account.",
      "type": "string",
      "format": "date-time"
    },
    "on_balance_sheet": {
      "description": "Is the account or deposit reported on the balance sheet of the financial institution?",
      "type": "boolean"
    },
    "orig_credit_score": {
      "description": "The credit score of the customer at origination of the product using a commercially available credit bureau score.",
      "type": "integer"
    },
    "parent_facility_id": {
      "description": "The parent code assigned by the financial institution to identify a facility.",
      "type": "string"
    },
    "pd_irb": {
      "description": "The probability of default as determined by internal ratings-based approach. Expressed as a percentage between 0 and 1. This value is used in regulatory capital calculations.",
      "type": "number",
      "minimum": 0,
      "maximum": 1
    },
    "pd_irb_ec": {
      "description": "The probability of default as determined by internal ratings-based approach. Expressed as a percentage between 0 and 1. This value is used in economic capital calculations.",
      "type": "number",
      "minimum": 0,
      "maximum": 1
    },
    "prev_payment_date": {
      "description": "The most recent previous date at which interest was paid or accrued_interest balance returned to zero.",
      "type": "string",
      "format": "date-time"
    },
    "product_name": {
      "description": "The name of the product as given by the financial institution to be used for display and reference purposes.",
      "type": "string"
    },
    "purpose": {
      "description": "The purpose for which the account was created or is being used.",
      "type": "string",
      "enum": [
        "adj_syn_inv_decon_subs",
        "adj_syn_inv_own_shares",
        "adj_syn_mtg_def_ins",
        "adj_syn_nonsig_inv_fin",
        "adj_syn_other_inv_fin",
        "admin",
        "annual_bonus_accruals",
        "benefit_in_kind",
        "capital_gain_tax",
        "capital_reserve",
        "cash_management",
        "cf_hedge",
        "cf_hedge_reclass",
        "ci_service",
        "clearing",
        "collateral",
        "commitments",
        "computer_and_it_cost",
        "computer_peripheral",
        "computer_software",
        "corporation_tax",
        "credit_card_fee",
        "critical_service",
        "current_account_fee",
        "custody",
        "dealing_rev_deriv",
        "dealing_rev_deriv_nse",
        "dealing_rev_fx",
        "dealing_rev_fx_nse",
        "dealing_rev_ir",
        "dealing_rev_sec",
        "dealing_rev_sec_nse",
        "dealing_revenue",
        "ded_fut_prof",
        "ded_fut_prof_temp_diff",
        "defined_benefit",
        "deposit",
        "derivative_fee",
        "dgs_contribution",
        "div_from_cis",
        "div_from_money_mkt",
        "dividend",
        "donation",
        "employee",
        "employee_stock_option",
        "escrow",
        "fees",
        "fine",
        "firm_operating_expenses",
        "firm_operations",
        "furniture",
        "fut_prof",
        "fut_prof_temp_diff",
        "fx",
        "general_credit_risk",
        "goodwill",
        "insurance_fee",
        "int_on_bond_and_frn",
        "int_on_bridging_loan",
        "int_on_credit_card",
        "int_on_deposit",
        "int_on_deriv_hedge",
        "int_on_derivative",
        "int_on_ecgd_lending",
        "int_on_finance_leasing",
        "int_on_loan_and_adv",
        "int_on_money_mkt",
        "int_on_mortgage",
        "int_on_sft",
        "int_unallocated",
        "intangible",
        "interest",
        "intra_group_fee",
        "inv_in_subsidiary",
        "investment_banking_fee",
        "investment_property",
        "ips",
        "land",
        "loan_and_advance_fee",
        "machinery",
        "manufactured_dividend",
        "mortgage_fee",
        "mtg_ins_nonconform",
        "mtg_insurance",
        "ni_contribution",
        "non_life_ins_premium",
        "not_fut_prof",
        "occupancy_cost",
        "operational",
        "operational_escrow",
        "operational_excess",
        "oth_tax_excl_temp_diff",
        "other",
        "other_expenditure",
        "other_fs_fee",
        "other_non_fs_fee",
        "other_social_contrib",
        "other_staff_cost",
        "other_staff_rem",
        "overdraft_fee",
        "own_property",
        "pension",
        "ppe",
        "prime_brokerage",
        "property",
        "pv_future_spread_inc",
        "rec_unidentified_cpty",
        "reclass_tax",
        "recovery",
        "redundancy_pymt",
        "reference",
        "reg_loss",
        "regular_wages",
        "release",
        "rent",
        "res_fund_contribution",
        "restructuring",
        "retained_earnings",
        "revaluation",
        "revenue_reserve",
        "share_plan",
        "share_premium",
        "staff",
        "system",
        "tax",
        "telecom_equipment",
        "third_party_interest",
        "underwriting_fee",
        "unsecured_loan_fee",
        "vehicle",
        "write_off"
      ]
    },
    "rate": {
      "description": "The full interest rate applied to the account balance in percentage terms. Note that this therefore includes the base_rate (ie. not the spread).",
      "type": "number"
    },
    "rate_type": {
      "description": "Describes the type of interest rate applied to the account.",
      "type": "string",
      "enum": [
        "combined",
        "fixed",
        "preferential",
        "tracker",
        "variable"
      ]
    },
    "regulatory_book": {
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/common.json#/regulatory_book"
    },
    "reporting_entity_name": {
      "description": "The name of the reporting legal entity for display purposes.",
      "type": "string"
    },
    "reporting_id": {
      "description": "The internal ID for the legal entity under which the account is being reported.",
      "type": "string"
    },
    "resolution_date": {
      "description": "Date of resolution of the defaulted facility.",
      "type": "string",
      "format": "date-time"
    },
    "review_date": {
      "description": "The currently scheduled review date for Counterparty exposure. This date should be set in the future. Formatted as YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601.",
      "type": "string",
      "format": "date-time"
    },
    "risk_country_code": {
      "description": "Two-letter country code describing where the risk for the account resides. In accordance with ISO 3166-1",
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/common.json#/country_code"
    },
    "risk_weight_std": {
      "description": "The standardised approach risk weight represented as a decimal/float such that 1.5% is 0.015.",
      "type": "number"
    },
    "rollover_date": {
      "description": "A particular predetermined date at which an account is rolled-over.",
      "type": "string",
      "format": "date-time"
    },
    "seniority": {
      "description": "The seniority of the security in the event of sale or bankruptcy of the issuer.",
      "type": "string",
      "enum": [
        "mezzanine",
        "pari_passu",
        "senior_secured",
        "senior_unsecured",
        "subordinated_secured",
        "subordinated_unsecured"
      ]
    },
    "source": {
      "description": "The source(s) where this data originated. If more than one source needs to be stored for data lineage, it should be separated by a dash. eg. Source1-Source2",
      "type": "string"
    },
    "start_date": {
      "description": "The timestamp that the trade or financial product commences. YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601.",
      "type": "string",
      "format": "date-time"
    },
    "status": {
      "description": "Describes if the Account is active or been cancelled.",
      "type": "string",
      "enum": [
        "active",
        "audited",
        "cancelled",
        "cancelled_payout_agreed",
        "other",
        "pending",
        "transactional",
        "unaudited"
      ]
    },
    "trade_date": {
      "description": "The timestamp that the trade or financial product terms are agreed. YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601.",
      "type": "string",
      "format": "date-time"
    },
    "type": {
      "description": "This is the type of the account with regards to common regulatory classifications.",
      "type": "string",
      "enum": [
        "accruals",
        "amortisation",
        "bonds",
        "call",
        "cd",
        "credit_card",
        "current",
        "current_io",
        "deferred",
        "deferred_tax",
        "depreciation",
        "expense",
        "income",
        "intangible",
        "internet_only",
        "ira",
        "isa",
        "isa_current",
        "isa_current_io",
        "isa_io",
        "isa_time_deposit",
        "isa_time_deposit_io",
        "money_market",
        "non_deferred",
        "non_product",
        "other",
        "prepaid_card",
        "prepayments",
        "provision",
        "reserve",
        "retail_bonds",
        "savings",
        "savings_io",
        "suspense",
        "tangible",
        "third_party_savings",
        "time_deposit",
        "time_deposit_io",
        "vostro"
      ]
    },
    "uk_funding_type": {
      "description": "Funding type calculated according to BIPRU 12.5/12.6",
      "type": "string",
      "enum": [
        "a",
        "b"
      ]
    },
    "version_id": {
      "description": "The version identifier of the data such as the firm's internal batch identifier.",
      "type": "string"
    },
    "withdrawal_penalty": {
      "description": "This is the penalty incurred by the customer for an early withdrawal on this account. An early withdrawal is defined as a withdrawal prior to the next_withdrawal_date. Monetary type represented as a naturally positive integer number of cents/pence.",
      "type": "integer",
      "monetary": true
    }
  },
  "required": [
    "id",
    "date"
  ],
  "additionalProperties": true
}>;

export type Adjustment = FromSchema<{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Adjustment Schema",
  "description": "An adjustment represents a modification to a report.",
  "type": "object",
  "properties": {
    "id": {
      "description": "The unique identifier for the record within the firm.",
      "type": "string"
    },
    "date": {
      "description": "The observation or value date for the data in this object. Formatted as YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601.",
      "type": "string",
      "format": "date-time"
    },
    "col": {
      "description": "The column of the report that this adjustment relates to.",
      "type": "string"
    },
    "comment": {
      "description": "The description or commentary around the adjustment.",
      "type": "string"
    },
    "contribution_amount": {
      "description": "The contribution amount this adjustment should make to the specified report cell. A positive/negative number in minor units (cents/pence).",
      "type": "integer",
      "monetary": true
    },
    "contribution_text": {
      "description": "The text to use for the adjustment where the reported cell is not a monetary value.",
      "type": "string"
    },
    "currency_code": {
      "description": "The currency of the contribution_amount in accordance with ISO 4217 standards.",
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/common.json#/currency_code"
    },
    "page": {
      "description": "The page of the report that this adjustment relates to.",
      "type": "string"
    },
    "report_type": {
      "description": "The report that this adjustment relates to.",
      "type": "string"
    },
    "reporting_entity_name": {
      "description": "The name of the reporting legal entity for display purposes.",
      "type": "string"
    },
    "row": {
      "description": "The row of the report that this adjustment relates to.",
      "type": "string"
    },
    "source": {
      "description": "The source(s) where this data originated. If more than one source needs to be stored for data lineage, it should be separated by a dash. eg. Source1-Source2",
      "type": "string"
    },
    "version_id": {
      "description": "The version identifier of the data such as the firm's internal batch identifier.",
      "type": "string"
    }
  },
  "oneOf": [
    {
      "required": [
        "id",
        "date",
        "report_type",
        "row",
        "col",
        "contribution_amount"
      ]
    },
    {
      "required": [
        "id",
        "date",
        "report_type",
        "row",
        "col",
        "contribution_text"
      ]
    }
  ],
  "dependencies": {
    "contribution_amount": [
      "currency_code"
    ]
  },
  "additionalProperties": true
}>;

export type Agreement = FromSchema<{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Agreement Schema",
  "description": "An agreement represents the standard terms agreed between two parties.",
  "type": "object",
  "properties": {
    "id": {
      "description": "The unique identifier for the record within the firm.",
      "type": "string"
    },
    "date": {
      "description": "The observation or value date for the data in this object. Formatted as YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601.",
      "type": "string",
      "format": "date-time"
    },
    "base_currency_code": {
      "description": "Currency in accordance with ISO 4217. It should be consistent with minimum transfer amount and threshold.",
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/common.json#/currency_code"
    },
    "country_code": {
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/common.json#/country_code",
      "description": "The country code for the governing law of the agreement. Two-letter country code as defined according to ISO 3166-1."
    },
    "credit_support_type": {
      "description": "The type of credit support document",
      "type": "string",
      "enum": [
        "csa_isda_1994",
        "csa_isda_1995",
        "csd_isda_1995",
        "scsa_isda_2013"
      ]
    },
    "customer_id": {
      "description": "The unique identifier used by the financial institution to identify the counterparty to this agreement.",
      "type": "string"
    },
    "guarantor_id": {
      "description": "The unique identifier used by the financial institution to identify the guarantor of the transactions covered by this agreement.",
      "type": "string"
    },
    "margin_frequency": {
      "description": "Indicates the periodic timescale at which variation margin is exchanged. Cleared derivatives which are daily settled can be flagged as daily_settled.",
      "type": "string",
      "enum": [
        "daily",
        "daily_settled",
        "weekly",
        "bi_weekly",
        "monthly"
      ]
    },
    "margin_period_of_risk": {
      "description": "Margin period of risk estimated for the transactions covered by the [CSA] agreement",
      "type": "integer"
    },
    "minimum_transfer_amount": {
      "description": "Smallest amount of collateral that can be transferred. Monetary type represented as a naturally positive integer number of cents/pence.",
      "type": "integer",
      "monetary": true
    },
    "netting_restriction": {
      "description": "populated only if any netting restriction applies, in relation to the nature of the agreement or the enforceability of netting in the jurisdiction of the counterparty, preventing the recognition of the agreement as risk-reducing, pursuant to CRR Articles 295 to 298",
      "type": "string",
      "enum": [
        "national_supervision",
        "no_right_to_offset",
        "restrictive_covenant"
      ]
    },
    "number_of_disputes": {
      "description": "Indicates the number of disputes threshold to be used in the margin period of risk",
      "type": "integer"
    },
    "source": {
      "description": "The source where this data originated.",
      "type": "string"
    },
    "start_date": {
      "description": "The timestamp that the agreement commences. YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601.",
      "type": "string",
      "format": "date-time"
    },
    "stay_protocol": {
      "description": "Indicates whether a stay protocol has been signed by one or both parties to the agreement.",
      "type": "string",
      "enum": [
        "both",
        "customer",
        "self_signed"
      ]
    },
    "threshold": {
      "description": "Amount below which collateral is not required. Monetary type represented as a naturally positive integer number of cents/pence.",
      "type": "integer",
      "monetary": true
    },
    "type": {
      "description": "The type of the master agreement.",
      "type": "string",
      "enum": [
        "afb",
        "drv",
        "ema",
        "fbf",
        "gmra",
        "gmsla",
        "icma_1992",
        "icma_1995",
        "icma_2000",
        "icma_2011",
        "isda",
        "isda_1985",
        "isda_1986",
        "isda_1987",
        "isda_1992",
        "isda_2002",
        "other",
        "other_gmra",
        "other_isda"
      ]
    },
    "version_id": {
      "description": "The version identifier of the data such as the firm's internal batch identifier.",
      "type": "string"
    }
  },
  "required": [
    "id",
    "date"
  ],
  "additionalProperties": true
}>;

export type Batch = FromSchema<{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Batch Schema",
  "description": "FIRE schema for representing bulk collections of bank objects.",
  "type": "object",
  "properties": {
    "count": {
      "description": "Number of records in this batch",
      "type": "integer",
      "minimum": 0
    },
    "data": {
      "description": "An array of data items of a single type",
      "type": "array",
      "minItems": 1,
      "items": {
        "anyOf": [
          {
            "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/account.json#"
          },
          {
            "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/collateral.json#"
          },
          {
            "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/customer.json#"
          },
          {
            "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/derivative.json#"
          },
          {
            "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/derivative_cash_flow.json#"
          },
          {
            "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/exchange_rate.json#"
          },
          {
            "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/guarantor.json#"
          },
          {
            "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/issuer.json#"
          },
          {
            "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/loan.json#"
          },
          {
            "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/loan_transaction.json#"
          },
          {
            "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/security.json#"
          }
        ]
      }
    },
    "links": {
      "description": "An array describing the page structure of the full data batch",
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "object",
        "properties": {
          "rel": {
            "type": "string",
            "enum": [
              "self",
              "prev",
              "next",
              "first",
              "last"
            ]
          },
          "href": {
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "rel",
          "href"
        ]
      }
    },
    "name": {
      "description": "A unique identifier for the data batch",
      "type": "string"
    }
  },
  "required": [
    "data",
    "name"
  ]
}>;

export type Collateral = FromSchema<{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Collateral Schema",
  "description": "Data schema to define collateral (currently can reference loans or accounts).",
  "type": "object",
  "properties": {
    "id": {
      "description": "The unique identifier for the record within the firm.",
      "type": "string"
    },
    "date": {
      "description": "The observation or value date for the data in this object. Formatted as YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601.",
      "type": "string",
      "format": "date-time"
    },
    "account_ids": {
      "description": "The unique identifier/s for the account/s within the financial institution.",
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "string"
      }
    },
    "charge": {
      "description": "Lender charge on collateral, 1 indicates first charge, 2 second and so on. 0 indicates a combination of charge levels.",
      "type": "integer",
      "minimum": 0
    },
    "city": {
      "description": "The city in which the property is located.",
      "type": "string"
    },
    "country_code": {
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/common.json#/country_code",
      "description": "The country of collateral. Two-letter country code as defined according to ISO 3166-1."
    },
    "currency_code": {
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/common.json#/currency_code"
    },
    "encumbrance_amount": {
      "description": "The amount of the collateral that is encumbered by potential future commitments or legal liabilities. Monetary type represented as a naturally positive integer number of cents/pence.",
      "type": "integer",
      "minimum": 0,
      "monetary": true
    },
    "encumbrance_type": {
      "description": "The type of the encumbrance causing the encumbrance_amount.",
      "type": "string",
      "enum": [
        "covered_bond",
        "derivative",
        "none",
        "other",
        "real_estate",
        "repo"
      ]
    },
    "end_date": {
      "description": "The end date for recognition of the collateral",
      "type": "string",
      "format": "date-time"
    },
    "loan_ids": {
      "description": "The unique identifiers for the loans within the financial institution.",
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "string"
      }
    },
    "orig_value": {
      "description": "The valuation as used by the bank for the collateral at the origination of the related loan or line of credit. Monetary type represented as a naturally positive integer number of cents/pence.",
      "type": "integer",
      "monetary": true
    },
    "postal_code": {
      "description": "The zip code in which the property is located. Refer to https://www.federalreserve.gov/apps/reportingforms/Report/Index/FR_Y-14M for more information.",
      "type": "string"
    },
    "regulatory_book": {
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/common.json#/regulatory_book"
    },
    "security_id": {
      "description": "The unique identifier used by the financial institution to identify the security representing collateral.",
      "type": "string"
    },
    "source": {
      "description": "The source(s) where this data originated. If more than one source needs to be stored for data lineage, it should be separated by a dash. eg. Source1-Source2",
      "type": "string"
    },
    "start_date": {
      "description": "The start date for recognition of the collateral",
      "type": "string",
      "format": "date-time"
    },
    "street_address": {
      "description": "The street address associated with the property. Must include street direction prefixes, direction suffixes, and unit number for condos and co-ops. Refer to https://www.federalreserve.gov/apps/reportingforms/Report/Index/FR_Y-14M for more information.",
      "type": "string"
    },
    "type": {
      "description": "The collateral type defines the form of the collateral provided",
      "type": "string",
      "enum": [
        "auto",
        "cash",
        "co_op",
        "commercial_property",
        "commercial_property_hr",
        "condo",
        "debenture",
        "farm",
        "four_units",
        "guarantee",
        "immovable_property",
        "life_policy",
        "manufactured_house",
        "multifamily",
        "one_unit",
        "other",
        "planned_unit_dev",
        "res_property_hr",
        "resi_mixed_use",
        "residential_property",
        "security",
        "single_family",
        "three_units",
        "townhouse",
        "two_units"
      ]
    },
    "value": {
      "description": "The valuation as used by the bank for the collateral on the value_date. Monetary type represented as a naturally positive integer number of cents/pence.",
      "type": "integer",
      "monetary": true
    },
    "value_date": {
      "description": "The timestamp that the collateral was valued. YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601.",
      "type": "string",
      "format": "date-time"
    },
    "version_id": {
      "description": "The version identifier of the data such as the firm's internal batch identifier.",
      "type": "string"
    },
    "vol_adj": {
      "description": "The volatility adjustment appropriate to the collateral.",
      "type": "number"
    },
    "vol_adj_fx": {
      "description": "The volatility adjustment appropriate to currency mismatch.",
      "type": "number"
    }
  },
  "required": [
    "id",
    "date",
    "value"
  ],
  "additionalProperties": true
}>;

export type Common = FromSchema<{
  "accounting_treatment": {
    "description": "The accounting treatment in accordance with IAS/IFRS9 accounting principles.",
    "type": "string",
    "enum": [
      "amortised_cost",
      "available_for_sale",
      "cb_or_demand",
      "deed_in_lieu",
      "fv_mandatorily",
      "fv_oci",
      "fv_thru_pnl",
      "held_for_hedge",
      "held_for_invest",
      "held_for_invest_fvo",
      "held_for_sale",
      "held_for_trading",
      "held_to_maturity",
      "loans_and_recs",
      "ntnd_cost_based",
      "ntnd_fv_equity",
      "ntnd_fv_pl",
      "other_gaap",
      "trading_gaap"
    ]
  },
  "asset_class": {
    "description": "The asset class to which the derivative belongs.",
    "type": "string",
    "enum": [
      "agri",
      "co",
      "co_other",
      "coal",
      "coffee",
      "corn",
      "cr",
      "cr_index",
      "cr_single",
      "electricity",
      "energy",
      "eq",
      "eq_index",
      "eq_single",
      "fx",
      "gas",
      "gold",
      "inflation",
      "ir",
      "metals",
      "oil",
      "other",
      "palladium",
      "platinum",
      "precious_metals",
      "silver",
      "sugar"
    ]
  },
  "asset_liability": {
    "description": "Is the data an asset, a liability, or equity on the firm's balance sheet?",
    "type": "string",
    "enum": [
      "asset",
      "equity",
      "liability",
      "pnl"
    ]
  },
  "ccf": {
    "description": "The credit conversion factor that indicates the proportion of the undrawn amount that would be drawn down on default.",
    "type": "number",
    "minimum": 0
  },
  "country_code": {
    "description": "Two-letter country code as defined according to ISO 3166-1 plus ISO allowed, user-assignable codes (AA, QM to QZ, XA to XZ, and ZZ).",
    "type": "string",
    "enum": [
      "AA",
      "AD",
      "AE",
      "AE-AJ",
      "AE-AZ",
      "AE-DU",
      "AE-FU",
      "AE-RK",
      "AE-SH",
      "AE-UQ",
      "AF",
      "AG",
      "AI",
      "AL",
      "AM",
      "AO",
      "AQ",
      "AR",
      "AS",
      "AT",
      "AU",
      "AW",
      "AX",
      "AZ",
      "BA",
      "BB",
      "BD",
      "BE",
      "BF",
      "BG",
      "BH",
      "BI",
      "BJ",
      "BL",
      "BM",
      "BN",
      "BO",
      "BQ",
      "BR",
      "BS",
      "BT",
      "BV",
      "BW",
      "BY",
      "BZ",
      "CA",
      "CA-AB",
      "CA-BC",
      "CA-MB",
      "CA-NB",
      "CA-NL",
      "CA-NS",
      "CA-NT",
      "CA-NU",
      "CA-ON",
      "CA-PE",
      "CA-QC",
      "CA-SK",
      "CA-YT",
      "CC",
      "CD",
      "CF",
      "CG",
      "CH",
      "CI",
      "CK",
      "CL",
      "CM",
      "CN",
      "CO",
      "CR",
      "CU",
      "CV",
      "CW",
      "CX",
      "CY",
      "CZ",
      "DE",
      "DJ",
      "DK",
      "DM",
      "DO",
      "DZ",
      "EC",
      "EE",
      "EG",
      "EH",
      "ER",
      "ES",
      "ET",
      "FI",
      "FJ",
      "FK",
      "FM",
      "FO",
      "FR",
      "GA",
      "GB",
      "GD",
      "GE",
      "GF",
      "GG",
      "GH",
      "GI",
      "GL",
      "GM",
      "GN",
      "GP",
      "GQ",
      "GR",
      "GS",
      "GT",
      "GU",
      "GW",
      "GY",
      "HK",
      "HM",
      "HN",
      "HR",
      "HT",
      "HU",
      "ID",
      "IE",
      "IL",
      "IM",
      "IN",
      "IO",
      "IQ",
      "IR",
      "IS",
      "IT",
      "JE",
      "JM",
      "JO",
      "JP",
      "KE",
      "KG",
      "KH",
      "KI",
      "KM",
      "KN",
      "KP",
      "KR",
      "KW",
      "KY",
      "KZ",
      "LA",
      "LB",
      "LC",
      "LI",
      "LK",
      "LR",
      "LS",
      "LT",
      "LU",
      "LV",
      "LY",
      "MA",
      "MC",
      "MD",
      "ME",
      "MF",
      "MG",
      "MH",
      "MK",
      "ML",
      "MM",
      "MN",
      "MO",
      "MP",
      "MQ",
      "MR",
      "MS",
      "MT",
      "MU",
      "MV",
      "MW",
      "MX",
      "MY",
      "MZ",
      "NA",
      "NC",
      "NE",
      "NF",
      "NG",
      "NI",
      "NL",
      "NO",
      "NP",
      "NR",
      "NU",
      "NZ",
      "OM",
      "PA",
      "PE",
      "PF",
      "PG",
      "PH",
      "PK",
      "PL",
      "PM",
      "PN",
      "PR",
      "PS",
      "PT",
      "PW",
      "PY",
      "QA",
      "QM",
      "QN",
      "QO",
      "QP",
      "QQ",
      "QR",
      "QS",
      "QT",
      "QU",
      "QV",
      "QW",
      "QX",
      "QY",
      "QZ",
      "RE",
      "RO",
      "RS",
      "RU",
      "RW",
      "SA",
      "SB",
      "SC",
      "SD",
      "SE",
      "SG",
      "SH",
      "SI",
      "SJ",
      "SK",
      "SL",
      "SM",
      "SN",
      "SO",
      "SR",
      "SS",
      "ST",
      "SV",
      "SX",
      "SY",
      "SZ",
      "TC",
      "TD",
      "TF",
      "TG",
      "TH",
      "TJ",
      "TK",
      "TL",
      "TM",
      "TN",
      "TO",
      "TR",
      "TT",
      "TV",
      "TW",
      "TZ",
      "UA",
      "UG",
      "UM",
      "US",
      "US-AK",
      "US-AL",
      "US-AR",
      "US-AZ",
      "US-CA",
      "US-CO",
      "US-CT",
      "US-DC",
      "US-DE",
      "US-FL",
      "US-GA",
      "US-HI",
      "US-IA",
      "US-ID",
      "US-IL",
      "US-IN",
      "US-KS",
      "US-KY",
      "US-LA",
      "US-MA",
      "US-MD",
      "US-ME",
      "US-MI",
      "US-MN",
      "US-MO",
      "US-MS",
      "US-MT",
      "US-NC",
      "US-ND",
      "US-NE",
      "US-NH",
      "US-NJ",
      "US-NM",
      "US-NV",
      "US-NY",
      "US-OH",
      "US-OK",
      "US-OR",
      "US-PA",
      "US-RI",
      "US-SC",
      "US-SD",
      "US-TN",
      "US-TX",
      "US-UT",
      "US-VA",
      "US-VT",
      "US-WA",
      "US-WI",
      "US-WV",
      "US-WY",
      "UY",
      "UZ",
      "VA",
      "VC",
      "VE",
      "VG",
      "VI",
      "VN",
      "VU",
      "WF",
      "WS",
      "XA",
      "XB",
      "XC",
      "XD",
      "XE",
      "XF",
      "XG",
      "XH",
      "XI",
      "XJ",
      "XK",
      "XL",
      "XM",
      "XN",
      "XO",
      "XP",
      "XQ",
      "XR",
      "XS",
      "XT",
      "XU",
      "XV",
      "XW",
      "XX",
      "XY",
      "XZ",
      "YE",
      "YT",
      "ZA",
      "ZM",
      "ZW",
      "ZZ"
    ]
  },
  "cr_approach": {
    "description": "Specifies the approved credit risk rwa calculation approach to be applied to the exposure.",
    "type": "string",
    "enum": [
      "airb",
      "eif_fb",
      "eif_lt",
      "eif_mba",
      "firb",
      "sec_erba",
      "sec_sa",
      "sec_sa_lt",
      "std"
    ]
  },
  "currency_code": {
    "description": "Currency in accordance with ISO 4217 standards plus CNH for practical considerations.",
    "type": "string",
    "enum": [
      "AED",
      "AFN",
      "ALL",
      "AMD",
      "ANG",
      "AOA",
      "ARS",
      "AUD",
      "AWG",
      "AZN",
      "BAM",
      "BBD",
      "BDT",
      "BGN",
      "BHD",
      "BIF",
      "BMD",
      "BND",
      "BOB",
      "BOV",
      "BRL",
      "BSD",
      "BTN",
      "BWP",
      "BYN",
      "BZD",
      "CAD",
      "CDF",
      "CHE",
      "CHF",
      "CHW",
      "CLF",
      "CLP",
      "CNH",
      "CNY",
      "COP",
      "COU",
      "CRC",
      "CUC",
      "CUP",
      "CVE",
      "CZK",
      "DJF",
      "DKK",
      "DOP",
      "DZD",
      "EGP",
      "ERN",
      "ETB",
      "EUR",
      "FJD",
      "FKP",
      "GBP",
      "GEL",
      "GHS",
      "GIP",
      "GMD",
      "GNF",
      "GTQ",
      "GYD",
      "HKD",
      "HNL",
      "HRK",
      "HTG",
      "HUF",
      "IDR",
      "ILS",
      "INR",
      "IQD",
      "IRR",
      "ISK",
      "JMD",
      "JOD",
      "JPY",
      "KES",
      "KGS",
      "KHR",
      "KMF",
      "KPW",
      "KRW",
      "KWD",
      "KYD",
      "KZT",
      "LAK",
      "LBP",
      "LKR",
      "LRD",
      "LSL",
      "LYD",
      "MAD",
      "MDL",
      "MGA",
      "MKD",
      "MMK",
      "MNT",
      "MOP",
      "MRU",
      "MUR",
      "MVR",
      "MWK",
      "MXN",
      "MXV",
      "MYR",
      "MZN",
      "NAD",
      "NGN",
      "NIO",
      "NOK",
      "NPR",
      "NZD",
      "OMR",
      "PAB",
      "PEN",
      "PGK",
      "PHP",
      "PKR",
      "PLN",
      "PYG",
      "QAR",
      "RON",
      "RSD",
      "RUB",
      "RWF",
      "SAR",
      "SBD",
      "SCR",
      "SDG",
      "SEK",
      "SGD",
      "SHP",
      "SLL",
      "SOS",
      "SRD",
      "SSP",
      "STN",
      "SYP",
      "SZL",
      "THB",
      "TJS",
      "TMT",
      "TND",
      "TOP",
      "TRY",
      "TTD",
      "TWD",
      "TZS",
      "UAH",
      "UGX",
      "USD",
      "USN",
      "USS",
      "UYI",
      "UYU",
      "UYW",
      "UZS",
      "VES",
      "VND",
      "VUV",
      "WST",
      "XAF",
      "XAG",
      "XAU",
      "XBA",
      "XBB",
      "XBC",
      "XBD",
      "XCD",
      "XDR",
      "XOF",
      "XPD",
      "XPF",
      "XPT",
      "XSU",
      "XTS",
      "XUA",
      "XXX",
      "YER",
      "ZAR",
      "ZMW"
    ]
  },
  "day_count_convention": {
    "description": "The methodology for calculating the number of days between two dates. It is used to calculate the amount of accrued interest or the present value.",
    "type": "string",
    "enum": [
      "act_360",
      "act_365",
      "act_act",
      "std_30_360",
      "std_30_365"
    ]
  },
  "impairment_status": {
    "description": "The recognition stage for the impairment/expected credit loss of the product.",
    "type": "string",
    "enum": [
      "doubtful",
      "in_litigation",
      "loss",
      "non_performing",
      "normal",
      "performing",
      "pre_litigation",
      "stage_1",
      "stage_1_doubtful",
      "stage_1_loss",
      "stage_1_normal",
      "stage_1_substandard",
      "stage_1_watch",
      "stage_2",
      "stage_2_doubtful",
      "stage_2_loss",
      "stage_2_normal",
      "stage_2_substandard",
      "stage_2_watch",
      "stage_3",
      "stage_3_doubtful",
      "stage_3_loss",
      "stage_3_normal",
      "stage_3_substandard",
      "stage_3_watch",
      "substandard",
      "watch"
    ]
  },
  "impairment_type": {
    "description": "The loss event resulting in the impairment of the loan.",
    "type": "string",
    "enum": [
      "collective",
      "individual",
      "write_off"
    ]
  },
  "mic_code": {
    "description": "The market identifier code as defined by the International Standards Organisation.",
    "type": "string",
    "minLength": 4,
    "maxLength": 4
  },
  "regulatory_book": {
    "description": "The type of portfolio in which the instrument is held.",
    "type": "string",
    "enum": [
      "banking_book",
      "trading_book"
    ]
  }
}>;

export type Curve = FromSchema<{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Curve Schema",
  "description": "A Curve represents a series of points on a plot. Typically, interest rates, volatility or forward prices.",
  "type": "object",
  "properties": {
    "id": {
      "description": "The unique identifier for the record within the firm.",
      "type": "string"
    },
    "date": {
      "description": "The observation or value date for the data in this object. Formatted as YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601.",
      "type": "string",
      "format": "date-time"
    },
    "currency_code": {
      "description": "The currency reference code in accordance with ISO 4217 standards.",
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/common.json#/currency_code"
    },
    "name": {
      "description": "The internal name of the curve.",
      "type": "string"
    },
    "source": {
      "description": "The source(s) where this data originated. If more than one source needs to be stored for data lineage, it should be separated by a dash. eg. Source1-Source2",
      "type": "string"
    },
    "type": {
      "description": "The curve type.",
      "type": "string",
      "enum": [
        "behavioral",
        "rate",
        "risk_rating",
        "volatility"
      ]
    },
    "values": {
      "description": "The list of values for this curve.",
      "type": "array",
      "minItems": 1,
      "uniqueItems": true,
      "items": {
        "type": "object",
        "properties": {
          "reference": {
            "description": "The reference item for the value. (x-axis)",
            "type": "string",
            "enum": [
              "o_n",
              "1w",
              "1m",
              "3m",
              "6m",
              "9m",
              "12m",
              "15m",
              "18m",
              "21m",
              "24m",
              "27m",
              "30m",
              "33m",
              "36m",
              "60m",
              "120m"
            ]
          },
          "value": {
            "description": "The reference value for this rate. (y-axis)",
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ]
          }
        },
        "required": [
          "reference",
          "value"
        ]
      }
    },
    "version_id": {
      "description": "The version identifier of the data such as the firm's internal batch identifier.",
      "type": "string"
    }
  },
  "required": [
    "id",
    "date",
    "values"
  ],
  "additionalProperties": true,
  "if": {
    "properties": {
      "type": {
        "const": "risk_rating"
      }
    },
    "required": [
      "type"
    ]
  },
  "then": {
    "properties": {
      "values": {
        "items": {
          "properties": {
            "value": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  "else": {
    "properties": {
      "values": {
        "items": {
          "properties": {
            "value": {
              "type": "number"
            }
          }
        }
      }
    }
  }
}>;

export type Customer = FromSchema<{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Customer Schema",
  "description": "Data schema to define a customer or legal entity related to a financial product or transaction.",
  "type": "object",
  "allOf": [
    {
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/entity.json"
    }
  ],
  "properties": {
    "annual_debit_turnover": {
      "description": "The annual debit turnover in the business account of the entity. Monetary type represented as a naturally positive integer number of cents/pence.",
      "type": "integer",
      "minimum": 0,
      "monetary": true
    },
    "clearing_threshold": {
      "description": "Status of the clearing threshold as defined in EMIR",
      "type": "string",
      "enum": [
        "above",
        "below"
      ]
    },
    "df_ccp": {
      "description": "The pre-funded financial resources of the CCP in accordance with Article 50c of Regulation (EU) No 648/2012",
      "type": "integer",
      "monetary": true
    },
    "df_cm": {
      "description": "The sum of pre-funded contributions of all clearing members of the QCCP in accordance with Article 50c of Regulation (EU) No 648/2012.",
      "type": "integer",
      "monetary": true
    },
    "incurred_cva": {
      "description": "The amount of credit valuation adjustments being recognised by the institution as an incurred write-down, calculated without taking into account any offsetting debit value adjustment attributed to the firm's own credit risk, that has been already excluded from own funds.",
      "type": "integer",
      "monetary": true
    },
    "k_ccp": {
      "description": "Hypothetical capital of the QCCP in accordance with Article 50c of Regulation (EU) No 648/2012",
      "type": "integer",
      "monetary": true
    },
    "mic_code": {
      "description": "The Stock Exchange where the company's primary stock trades",
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/common.json#/mic_code"
    },
    "pd_irb_ec": {
      "description": "The probability of default as determined by internal ratings-based approach. Expressed as a percentage between 0 and 1. This value is used in economic capital calculations.",
      "type": "number",
      "minimum": 0,
      "maximum": 1
    },
    "product_count": {
      "description": "The number of active products/trades this customer has with the firm.",
      "type": "integer",
      "minimum": 0
    },
    "risk_profile": {
      "description": "The evaluation of the customer's willingness and/or capacity to take on financial risk.",
      "type": "integer",
      "minimum": 1,
      "maximum": 10
    },
    "start_date": {
      "description": "The date that the customer first became a customer. YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601.",
      "type": "string",
      "format": "date-time"
    },
    "status": {
      "description": "The status of the relationship with the customer from the firm's point of view.",
      "type": "string",
      "enum": [
        "established"
      ]
    }
  },
  "required": [
    "id",
    "date"
  ],
  "additionalProperties": true
}>;

export type Derivative = FromSchema<{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Derivative Schema",
  "description": "A derivative is a contract which derives its value from an underlying reference index, security or asset.",
  "type": "object",
  "properties": {
    "id": {
      "description": "The unique identifier for the record within the firm.",
      "type": "string"
    },
    "date": {
      "description": "The observation or value date for the data in this object. Formatted as YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601.",
      "type": "string",
      "format": "date-time"
    },
    "accounting_treatment": {
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/common.json#/accounting_treatment"
    },
    "accrued_interest": {
      "description": "The accrued interest since the last payment date and due at the next payment date. Monetary type represented as a naturally positive integer number of cents/pence.",
      "type": "integer",
      "monetary": true
    },
    "asset_class": {
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/common.json#/asset_class"
    },
    "asset_liability": {
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/common.json#/asset_liability"
    },
    "balance": {
      "description": "Outstanding amount including accrued interest. Monetary type represented as a naturally positive integer number of cents/pence.",
      "type": "integer",
      "monetary": true
    },
    "base_rate": {
      "description": "The base rate represents the basis of the rate on the balance at the given date as agreed in the terms of the financial product.",
      "type": "string",
      "enum": [
        "FDTR",
        "UKBRBASE",
        "ZERO"
      ]
    },
    "break_dates": {
      "description": "Dates where this contract can be broken (by either party). Formatted as YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601.",
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "string",
        "format": "date-time"
      }
    },
    "call_dates": {
      "description": "Dates where this contract can be called (by the customer). Formatted as YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601.",
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "string",
        "format": "date-time"
      }
    },
    "ccr_approach": {
      "description": "Specifies the approved counterparty credit risk methodology for calculating exposures.",
      "type": "string",
      "enum": [
        "imm",
        "oem",
        "sa",
        "ssa"
      ]
    },
    "cost_center_code": {
      "description": "The organizational unit or sub-unit to which costs/profits are booked.",
      "type": "string"
    },
    "country_code": {
      "description": "Two-letter country code for derivative location/jurisdiction. In accordance with ISO 3166-1.",
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/common.json#/country_code"
    },
    "cr_approach": {
      "description": "Specifies the approved credit risk rwa calculation approach to be applied to the exposure.",
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/common.json#/cr_approach"
    },
    "csa_id": {
      "description": "The unique identifier of the credit support annex for this derivative",
      "type": "string"
    },
    "currency_code": {
      "description": "Actual currency of the underlying reference index, security or asset for the derivative in accordance with ISO 4217 standards. It should be consistent with balance, accrued_interest, guarantee_amount and other monetary amounts.",
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/common.json#/currency_code"
    },
    "customer_id": {
      "description": "The unique identifier used by the financial institution to identify the customer for this product.",
      "type": "string"
    },
    "deal_id": {
      "description": "The unique identifier used by the financial institution for the deal to which this derivative belongs.",
      "type": "string"
    },
    "delta": {
      "description": "Price sensitivity to the underlying.",
      "type": "number"
    },
    "end_date": {
      "description": "YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601",
      "type": "string",
      "format": "date-time"
    },
    "first_payment_date": {
      "description": "The first payment date for interest payments.",
      "type": "string",
      "format": "date-time"
    },
    "frr_id": {
      "description": "The internal risk rating assigned to a facility based on its specific risk characteristics, including collateral and seniority.",
      "type": "string"
    },
    "fvh_level": {
      "description": "Fair value hierarchy category according to IFRS 13.93 (b)",
      "type": "integer",
      "minimum": 1,
      "maximum": 3
    },
    "gamma": {
      "description": "Second-order price sensitivity to the underlying or rate of change of the delta.",
      "type": "number"
    },
    "hedge_designation": {
      "type": "string",
      "description": "ASU 2017-12 hedge designations allowed in conjunction with partial-term hedging election in ASC 815-20-25-12b(2)(ii). These designations are described in ASC 815-20-25-12A and 815-25-35-13B.\n\nhttps://asc.fasb.org/1943274/2147480682/815-20-25-12A\nhttps://asc.fasb.org/1943274/2147480295/815-25-35-13B",
      "enum": [
        "cash_flows",
        "last_of_layer"
      ]
    },
    "hedge_sidedness": {
      "type": "string",
      "description": "Whether the hedging instrument provides a one-sided effective offset of the hedged risk, as permitted under ASC 815-20-25-76.\n\nhttps://asc.fasb.org/1943274/2147480682/815-20-25-76",
      "enum": [
        "one_sided",
        "two_sided"
      ]
    },
    "hedge_type": {
      "type": "string",
      "description": "The type of hedge (fair value or cash flow hedge) associated with the holding. Whether it is hedging individually or is hedging as part of a portfolio of assets with similar risk that are hedged as a group in line with ASC 815-20-25-12 (b), ASC 815-20-2512A, or ASC 815-10-25-15.\n\nhttps://asc.fasb.org/1943274/2147480682/815-20-25-12\nhttps://asc.fasb.org/1943274/2147480682/815-20-25-12A\nhttps://asc.fasb.org/1943274/2147480682/815-10-25-15",
      "enum": [
        "cf_hedge",
        "fv_hedge"
      ]
    },
    "hedged_cf_type": {
      "type": "string",
      "description": "The type of cash flow associated with the hedge if it is a cash flow hedge. Refer to https://www.federalreserve.gov/apps/reportingforms/Report/Index/FR_Y-14Q for more information.",
      "enum": [
        "interest_only",
        "other",
        "partial",
        "principal_interest",
        "principal_only"
      ]
    },
    "hedged_risk": {
      "type": "string",
      "description": "The risk being hedged, among the potential hedged risks described under ASC 815-20-25-12 and ASC 815-20-25-15.\n\nhttps://asc.fasb.org/1943274/2147480682/815-20-25-12\nhttps://asc.fasb.org/1943274/2147480682/815-20-25-15",
      "enum": [
        "cr",
        "fv_option",
        "fx",
        "fx_cr",
        "ir",
        "ir_cr",
        "ir_fx",
        "ir_fx_cr",
        "other",
        "overall_fv_cf"
      ]
    },
    "impairment_amount": {
      "description": "The impairment amount for a security is the allowance set aside by the firm for losses.",
      "type": "integer",
      "minimum": 0,
      "monetary": true
    },
    "impairment_status": {
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/common.json#/impairment_status"
    },
    "implied_vol": {
      "description": "Options: implied volatility used to compute mtm and greeks.",
      "type": "number"
    },
    "initial_margin": {
      "description": "Upfront margin posted/received for the trade. Monetary type as integer number of cents.",
      "type": "integer",
      "monetary": true
    },
    "insolvency_rank": {
      "description": "The insolvency ranking as per the national legal framework of the reporting institution.",
      "type": "integer",
      "minimum": 1
    },
    "last_exercise_date": {
      "description": "The last date on which an option can be exercised. For European options, it is the option exercise date",
      "type": "string",
      "format": "date-time"
    },
    "last_payment_date": {
      "description": "The final payment date for interest payments, often coincides with end_date.",
      "type": "string",
      "format": "date-time"
    },
    "ledger_code": {
      "description": "The internal ledger code or line item name.",
      "type": "string"
    },
    "leg_type": {
      "description": "Describe the payoff type of the derivative leg.",
      "type": "string",
      "enum": [
        "call",
        "fixed",
        "floating",
        "indexed",
        "put"
      ]
    },
    "lgd_floored": {
      "description": "The final LGD value after the relevant floors have been applied. To be used in the IRB RWA calculations.",
      "type": "number",
      "minimum": 0,
      "maximum": 1
    },
    "lgd_irb": {
      "description": "The loss given default as determined by internal ratings-based approach. Expressed as a percentage between 0 and 1. This value is used in regulatory capital calculations.",
      "type": "number",
      "minimum": 0,
      "maximum": 1
    },
    "mic_code": {
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/common.json#/mic_code"
    },
    "mna_id": {
      "description": "The unique identifier of the Master Netting Agreement for this derivative",
      "type": "string"
    },
    "mtm_clean": {
      "description": "The mark-to-market value of the derivative excluding interest. Monetary type represented as a naturally positive integer number of cents/pence.",
      "type": "integer",
      "monetary": true
    },
    "mtm_dirty": {
      "description": "The mark-to-market value of the derivative including interest. Monetary type represented as a naturally positive integer number of cents/pence.",
      "type": "integer",
      "monetary": true
    },
    "next_exercise_date": {
      "description": "The next date at which the option can be exercised.",
      "type": "string",
      "format": "date-time"
    },
    "next_payment_amount": {
      "description": "The amount that will need to be paid at the next_payment_date. Monetary type represented as a naturally positive integer number of cents/pence.",
      "type": "integer",
      "monetary": true
    },
    "next_payment_date": {
      "description": "The next date at which interest will be paid or accrued_interest balance returned to zero.",
      "type": "string",
      "format": "date-time"
    },
    "next_receive_amount": {
      "description": "The amount that is expected to be received at the next_receive_date. Monetary type represented as a naturally positive integer number of cents/pence.",
      "type": "integer",
      "monetary": true
    },
    "next_receive_date": {
      "description": "The next date at which interest will be received or accrued_interest balance returned to zero.",
      "type": "string",
      "format": "date-time"
    },
    "next_reset_date": {
      "description": "The date on which the periodic payment term and conditions of a contract agreement are reset/re-established.",
      "type": "string",
      "format": "date-time"
    },
    "notional_amount": {
      "description": "The notional value is the total value with regard to a derivative's underlying index, security or asset at its spot price in accordance with the specifications (i.e. leverage) of the derivative product. Monetary type represented as a naturally positive integer number of cents/pence.",
      "type": "integer",
      "monetary": true
    },
    "on_balance_sheet": {
      "description": "Is the derivative reported on the balance sheet of the financial institution?",
      "type": "boolean"
    },
    "pd_irb": {
      "description": "The probability of default as determined by internal ratings-based approach. Expressed as a percentage between 0 and 1. This value is used in regulatory capital calculations.",
      "type": "number",
      "minimum": 0,
      "maximum": 1
    },
    "position": {
      "description": "Specifies the market position, i.e. long or short, of the derivative leg",
      "type": "string",
      "enum": [
        "long",
        "short"
      ]
    },
    "prev_payment_date": {
      "description": "The most recent previous date at which interest was paid or accrued_interest balance returned to zero.",
      "type": "string",
      "format": "date-time"
    },
    "product_name": {
      "description": "The name of the product as given by the financial institution to be used for display and reference purposes.",
      "type": "string"
    },
    "purpose": {
      "description": "The purpose for which the derivative is being held.",
      "type": "string",
      "enum": [
        "back_to_back",
        "client_execution",
        "client_transmission",
        "cva_hedge",
        "reference"
      ]
    },
    "rate": {
      "description": "The full interest rate applied to the derivative notional in percentage terms. Note that this therefore includes the base_rate (ie. not the spread).",
      "type": "number"
    },
    "regulatory_book": {
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/common.json#/regulatory_book"
    },
    "reporting_entity_name": {
      "description": "The name of the reporting legal entity for display purposes.",
      "type": "string"
    },
    "reporting_id": {
      "description": "The internal ID for the legal entity under which the account is being reported.",
      "type": "string"
    },
    "rho": {
      "description": "Price sensitivity to interest rates.",
      "type": "number"
    },
    "risk_country_code": {
      "description": "Two-letter country code describing where the risk for the derivative product resides. In accordance with ISO 3166-1",
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/common.json#/country_code"
    },
    "risk_weight_irb": {
      "description": "The internal risk weight represented as a decimal/float such that 1.5% is 0.015.",
      "type": "number"
    },
    "risk_weight_std": {
      "description": "The standardised approach risk weight represented as a decimal/float such that 1.5% is 0.015.",
      "type": "number"
    },
    "settlement_type": {
      "description": "The type of settlement for the contract.",
      "type": "string",
      "enum": [
        "cash",
        "physical"
      ]
    },
    "source": {
      "description": "The source(s) where this data originated. If more than one source needs to be stored for data lineage, it should be separated by a dash. eg. Source1-Source2",
      "type": "string"
    },
    "start_date": {
      "description": "Contract effective or commencement date; security issue date. Format YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601.",
      "type": "string",
      "format": "date-time"
    },
    "status": {
      "description": "Provides additional information regarding the status of the derivative.",
      "type": "string",
      "enum": [
        "free_deliveries",
        "unsettled"
      ]
    },
    "strike": {
      "description": "Strike price of the option, which is compared to the underlying price on the option exercise date.",
      "type": "number"
    },
    "supervisory_price": {
      "description": "Current price/value of the underlying of an option when different from underlying_price, e.g. for Asian-style options.",
      "type": "number"
    },
    "theta": {
      "description": "Price sensitivity with respect to time.",
      "type": "number"
    },
    "trade_date": {
      "description": "The timestamp that the trade or financial product terms are agreed. YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601.",
      "type": "string",
      "format": "date-time"
    },
    "type": {
      "description": "This is the type of the derivative with regards to common regulatory classifications.",
      "type": "string",
      "enum": [
        "cap_floor",
        "ccds",
        "cds",
        "forward",
        "fra",
        "future",
        "mtm_swap",
        "ndf",
        "nds",
        "ois",
        "option",
        "spot",
        "swaption",
        "vanilla_swap",
        "variance_swap",
        "xccy"
      ]
    },
    "underlying_currency_code": {
      "description": "Currency of the underlying which should be in line with ISO 4217 standards.",
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/common.json#/currency_code"
    },
    "underlying_derivative_id": {
      "description": "The unique identifier used by the financial institution to identify the underlying reference derivative for this derivative.",
      "type": "string"
    },
    "underlying_index": {
      "description": "The name of a derivative contract underlying which can be used for all derivative asset classes (e.g. interest rate index, credit index, equity index",
      "type": "string"
    },
    "underlying_index_tenor": {
      "description": "The designated maturity of the underlying interest rate index used in the underlying_index property for interest rate derivatives",
      "type": "string",
      "enum": [
        "1d",
        "7d",
        "28d",
        "91d",
        "182d",
        "1m",
        "2m",
        "3m",
        "4m",
        "5m",
        "6m",
        "7m",
        "8m",
        "9m",
        "12m",
        "24m",
        "60m",
        "120m",
        "360m"
      ]
    },
    "underlying_issuer_id": {
      "description": "The unique identifier used by the financial institution to identify the underlying reference issuer for this derivative.",
      "type": "string"
    },
    "underlying_price": {
      "description": "Current price/value of the underlying.",
      "type": "number"
    },
    "underlying_quantity": {
      "description": "Number of underlying units related to the underlying_price",
      "type": "number"
    },
    "underlying_security_id": {
      "description": "The unique identifier used by the financial institution to identify the underlying reference security for this derivative.",
      "type": "string"
    },
    "underlying_strike": {
      "description": "Strike price of the option, which is compared to the underlying price on the option exercise date.",
      "type": "number"
    },
    "value_date": {
      "description": "The timestamp that the derivative was valued. YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601.",
      "type": "string",
      "format": "date-time"
    },
    "vega": {
      "description": "Price sensitivity to volatility.",
      "type": "number"
    },
    "version_id": {
      "description": "The version identifier of the data such as the firm's internal batch identifier.",
      "type": "string"
    }
  },
  "required": [
    "id",
    "date"
  ],
  "additionalProperties": true
}>;

export type DerivativeCashFlow = FromSchema<{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Derivative Cash Flow Schema",
  "description": "A derivative cash flow where two parties exchange cash flows (or assets) derived from an underlying reference index, security or financial instrument.",
  "type": "object",
  "properties": {
    "id": {
      "description": "The unique identifier for the record within the firm.",
      "type": "string"
    },
    "date": {
      "description": "The observation or value date for the data in this object. Formatted as YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601.",
      "type": "string",
      "format": "date-time"
    },
    "accrued_interest": {
      "description": "The accrued interest/premium due at the next payment date. Monetary type represented as a naturally positive integer number of cents/pence.",
      "type": "integer",
      "monetary": true
    },
    "asset_class": {
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/common.json#/asset_class"
    },
    "asset_liability": {
      "description": "A derivative cash flow exchange that results in a net positive value after the transaction is an asset on the firm's balance sheet. A derivative cash flow exchange that results in a net negative value after the transaction is a liability on the firm's balance sheet.",
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/common.json#/asset_liability"
    },
    "balance": {
      "description": "The contractual balance due on the payment date in the currency given. Monetary type represented as a naturally positive integer number of cents/pence.",
      "type": "integer",
      "monetary": true
    },
    "csa_id": {
      "description": "The unique identifier of the credit support annex for this derivative cash flow",
      "type": "string"
    },
    "currency_code": {
      "description": "Actual currency of the security in accordance with ISO 4217 standards. It should be consistent with balance, accrued_interest, guarantee_amount and other monetary amounts.",
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/common.json#/currency_code"
    },
    "customer_id": {
      "description": "Counterparty to the cash flow",
      "type": "string"
    },
    "derivative_id": {
      "description": "Unique identifier to the derivative to which this cash flow relates",
      "type": "string"
    },
    "forward_rate": {
      "description": "Rate used to set a variable cash flow on the reset_date",
      "type": "number"
    },
    "leg": {
      "description": "The type of the payment leg.",
      "type": "string",
      "enum": [
        "pay",
        "receive"
      ]
    },
    "mna_id": {
      "description": "The unique identifier of the Master Netting Agreement for this derivative cash flow.",
      "type": "string"
    },
    "mtm_clean": {
      "description": "The mark-to-market value of the derivative cash flow excluding interest/premium/coupons. Monetary type represented as a naturally positive integer number of cents/pence.",
      "type": "integer",
      "monetary": true
    },
    "mtm_dirty": {
      "description": "The mark-to-market value of the derivative cash flow including interest/premium/coupons. Monetary type represented as a naturally positive integer number of cents/pence.",
      "type": "integer",
      "monetary": true
    },
    "notional_amount": {
      "description": "The notional value is the total value with regard to a derivative's underlying index, security or asset at its spot price in accordance with the specifications (i.e. leverage) of the derivative product. Monetary type represented as a naturally positive integer number of cents/pence.",
      "type": "integer",
      "monetary": true
    },
    "on_balance_sheet": {
      "description": "Is the financial product reported on the balance sheet of the financial institution?",
      "type": "boolean"
    },
    "payment_date": {
      "description": "The timestamp that the cash flow will occur or was paid. YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601.",
      "type": "string",
      "format": "date-time"
    },
    "product_name": {
      "description": "The name of the product as given by the financial institution to be used for display and reference purposes.",
      "type": "string"
    },
    "purpose": {
      "description": "The purpose for which the derivative cash flow is calculated",
      "type": "string",
      "enum": [
        "interest",
        "principal",
        "reference"
      ]
    },
    "regulatory_book": {
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/common.json#/regulatory_book"
    },
    "reporting_entity_name": {
      "description": "The name of the reporting legal entity for display purposes.",
      "type": "string"
    },
    "reporting_id": {
      "description": "The internal ID for the legal entity under which the account is being reported.",
      "type": "string"
    },
    "reset_date": {
      "description": "Date on which a variable cash flow amount is set. YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601.",
      "type": "string",
      "format": "date-time"
    },
    "settlement_type": {
      "description": "The type of settlement for the contract.",
      "type": "string",
      "enum": [
        "cash",
        "physical"
      ]
    },
    "source": {
      "description": "The source(s) where this data originated. If more than one source needs to be stored for data lineage, it should be separated by a dash. eg. Source1-Source2",
      "type": "string"
    },
    "trade_date": {
      "description": "The date that the derivative cash flow terms were agreed. YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601.",
      "type": "string",
      "format": "date-time"
    },
    "value_date": {
      "description": "The timestamp that the cash flow was valued. YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601.",
      "type": "string",
      "format": "date-time"
    },
    "version_id": {
      "description": "The version identifier of the data such as the firm's internal batch identifier.",
      "type": "string"
    }
  },
  "required": [
    "id",
    "date"
  ],
  "additionalProperties": true
}>;

export type Entity = FromSchema<{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Entity Schema",
  "description": "Data schema to define a person or legal entity.",
  "type": "object",
  "properties": {
    "id": {
      "description": "The unique identifier for the record within the firm.",
      "type": "string"
    },
    "date": {
      "description": "The observation or value date for the data in this object. Formatted as YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601.",
      "type": "string",
      "format": "date-time"
    },
    "address_city": {
      "description": "City, town or village.",
      "type": "string"
    },
    "bankruptcy_type": {
      "description": "The bankruptcy chapter of the borrower.",
      "type": "string",
      "enum": [
        "chapter_11",
        "chapter_12",
        "chapter_13",
        "chapter_7",
        "chapter_9",
        "other"
      ]
    },
    "birr_curve_id": {
      "description": "The ID of the curve containing historical Borrower Internal Risk Ratings (BIRR) for this entity. The curve must be of type 'risk_rating'.",
      "type": "string"
    },
    "birr_id": {
      "type": "string",
      "description": "The unique identifier of the Borrower Internal Risk Rating (BIRR), representing an internally assigned risk assessment for a customer based on their creditworthiness and financial stability."
    },
    "boe_industry_code": {
      "description": "Bank of England industry code.",
      "type": "string"
    },
    "boe_sector_code": {
      "description": "Bank of England sector code.",
      "type": "string"
    },
    "count": {
      "description": "Describes the number of entities represented by this record. eg. joint customers should have a count > 1.",
      "type": "integer",
      "minimum": 1
    },
    "country_code": {
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/common.json#/country_code",
      "description": "The person or entity country of residence. Two-letter country code as defined according to ISO 3166-1."
    },
    "cqs_irb": {
      "description": "The credit quality step for internal ratings based approach.",
      "type": "integer",
      "minimum": 1,
      "maximum": 12
    },
    "cqs_standardised": {
      "description": "The credit quality step for standardised approach.",
      "type": "integer",
      "minimum": 1,
      "maximum": 17
    },
    "credit_impaired": {
      "description": "Flag to determine if the entity credit quality is impaired.",
      "type": "boolean"
    },
    "currency_code": {
      "description": "Currency in accordance with ISO 4217. It should be consistent with the figures for turnover and total assets.",
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/common.json#/currency_code"
    },
    "dbrs_lt": {
      "description": "DBRS long term credit ratings",
      "type": "string",
      "enum": [
        "aaa",
        "aa_h",
        "aa",
        "aa_l",
        "a_h",
        "a",
        "a_l",
        "bbb_h",
        "bbb",
        "bbb_l",
        "bb_h",
        "bb",
        "bb_l",
        "b_h",
        "b",
        "b_l",
        "ccc_h",
        "ccc",
        "ccc_l",
        "cc",
        "c",
        "d"
      ]
    },
    "dbrs_st": {
      "description": "DBRS short term credit ratings",
      "type": "string",
      "enum": [
        "r1_h",
        "r1_m",
        "r1_l",
        "r2_h",
        "r2_m",
        "r2_l",
        "r3",
        "r4",
        "r5",
        "d"
      ]
    },
    "fitch_lt": {
      "description": "Fitch long term credit ratings",
      "type": "string",
      "enum": [
        "aaa",
        "aa_plus",
        "aa",
        "aa_minus",
        "a_plus",
        "a",
        "a_minus",
        "bbb_plus",
        "bbb",
        "bbb_minus",
        "bb_plus",
        "bb",
        "bb_minus",
        "b_plus",
        "b",
        "b_minus",
        "ccc_plus",
        "ccc",
        "ccc_minus",
        "cc",
        "c",
        "rd",
        "d"
      ]
    },
    "fitch_st": {
      "description": "Fitch short term credit ratings",
      "type": "string",
      "enum": [
        "f1_plus",
        "f1",
        "f2",
        "f3",
        "b",
        "c",
        "rd",
        "d"
      ]
    },
    "headcount": {
      "description": "The number of full time staff.",
      "type": "integer"
    },
    "internal_rating": {
      "description": "Categorization of unrated exposure",
      "type": "string",
      "enum": [
        "investment",
        "non_investment"
      ]
    },
    "intra_group": {
      "description": "Flag to indicate that this should be considered an intra-group entity.",
      "type": "boolean"
    },
    "kbra_lt": {
      "description": "KBRA long term credit ratings",
      "type": "string",
      "enum": [
        "aaa",
        "aa_plus",
        "aa",
        "aa_minus",
        "a_plus",
        "a",
        "a_minus",
        "bbb_plus",
        "bbb",
        "bbb_minus",
        "bb_plus",
        "bb",
        "bb_minus",
        "b_plus",
        "b",
        "b_minus",
        "ccc_plus",
        "ccc",
        "ccc_minus",
        "cc",
        "c",
        "d"
      ]
    },
    "kbra_st": {
      "description": "KBRA short term credit ratings",
      "type": "string",
      "enum": [
        "k1_plus",
        "k1",
        "k2",
        "k3",
        "b",
        "c",
        "d"
      ]
    },
    "legal_entity_name": {
      "description": "The official legal name of the entity.",
      "type": "string"
    },
    "lei_code": {
      "description": "The LEI code for the legal entity (for corporates).",
      "type": "string",
      "minLength": 20,
      "maxLength": 20
    },
    "lgd_irb": {
      "description": "The loss given default as determined by internal ratings-based approach. Expressed as a percentage between 0 and 1. This value is used in regulatory capital calculations.",
      "type": "number",
      "minimum": 0,
      "maximum": 1
    },
    "moodys_lt": {
      "description": "Moody's long term credit ratings",
      "type": "string",
      "enum": [
        "aaa",
        "aa1",
        "aa2",
        "aa3",
        "a1",
        "a2",
        "a3",
        "baa1",
        "baa2",
        "baa3",
        "ba1",
        "ba2",
        "ba3",
        "b1",
        "b2",
        "b3",
        "caa1",
        "caa2",
        "caa3",
        "ca",
        "c"
      ]
    },
    "moodys_st": {
      "description": "Moodys short term credit ratings",
      "type": "string",
      "enum": [
        "p1",
        "p2",
        "p3",
        "np"
      ]
    },
    "nace_code": {
      "description": "The EU NACE economic activity classification.",
      "type": "string",
      "enum": [
        "A.01.10",
        "A.01.11",
        "A.01.12",
        "A.01.13",
        "A.01.14",
        "A.01.15",
        "A.01.16",
        "A.01.19",
        "A.01.20",
        "A.01.21",
        "A.01.22",
        "A.01.23",
        "A.01.24",
        "A.01.25",
        "A.01.26",
        "A.01.27",
        "A.01.28",
        "A.01.29",
        "A.01.30",
        "A.01.40",
        "A.01.41",
        "A.01.42",
        "A.01.43",
        "A.01.44",
        "A.01.45",
        "A.01.46",
        "A.01.47",
        "A.01.49",
        "A.01.50",
        "A.01.60",
        "A.01.61",
        "A.01.62",
        "A.01.63",
        "A.01.64",
        "A.01.70",
        "A.02.10",
        "A.02.20",
        "A.02.30",
        "A.02.40",
        "A.03.10",
        "A.03.11",
        "A.03.12",
        "A.03.20",
        "A.03.21",
        "A.03.22",
        "B.05.10",
        "B.05.20",
        "B.06.10",
        "B.06.20",
        "B.07.10",
        "B.07.20",
        "B.07.21",
        "B.07.29",
        "B.08.10",
        "B.08.11",
        "B.08.12",
        "B.08.90",
        "B.08.91",
        "B.08.92",
        "B.08.93",
        "B.08.99",
        "B.09.10",
        "B.09.90",
        "C.10.10",
        "C.10.11",
        "C.10.12",
        "C.10.13",
        "C.10.20",
        "C.10.30",
        "C.10.31",
        "C.10.32",
        "C.10.39",
        "C.10.40",
        "C.10.41",
        "C.10.42",
        "C.10.50",
        "C.10.51",
        "C.10.52",
        "C.10.60",
        "C.10.61",
        "C.10.62",
        "C.10.70",
        "C.10.71",
        "C.10.72",
        "C.10.73",
        "C.10.80",
        "C.10.81",
        "C.10.82",
        "C.10.83",
        "C.10.84",
        "C.10.85",
        "C.10.86",
        "C.10.89",
        "C.10.90",
        "C.10.91",
        "C.10.92",
        "C.11.00",
        "C.11.01",
        "C.11.02",
        "C.11.03",
        "C.11.04",
        "C.11.05",
        "C.11.06",
        "C.11.07",
        "C.12.00",
        "C.13.10",
        "C.13.20",
        "C.13.30",
        "C.13.90",
        "C.13.91",
        "C.13.92",
        "C.13.93",
        "C.13.94",
        "C.13.95",
        "C.13.96",
        "C.13.99",
        "C.14.10",
        "C.14.11",
        "C.14.12",
        "C.14.13",
        "C.14.14",
        "C.14.19",
        "C.14.20",
        "C.14.30",
        "C.14.31",
        "C.14.39",
        "C.15.10",
        "C.15.11",
        "C.15.12",
        "C.15.20",
        "C.16.10",
        "C.16.20",
        "C.16.21",
        "C.16.22",
        "C.16.23",
        "C.16.24",
        "C.16.29",
        "C.17.10",
        "C.17.11",
        "C.17.12",
        "C.17.20",
        "C.17.21",
        "C.17.22",
        "C.17.24",
        "C.17.29",
        "C.17.30",
        "C.18.10",
        "C.18.11",
        "C.18.12",
        "C.18.13",
        "C.18.14",
        "C.18.20",
        "C.19.10",
        "C.19.20",
        "C.20.10",
        "C.20.11",
        "C.20.12",
        "C.20.13",
        "C.20.14",
        "C.20.15",
        "C.20.16",
        "C.20.17",
        "C.20.20",
        "C.20.30",
        "C.20.40",
        "C.20.41",
        "C.20.42",
        "C.20.50",
        "C.20.51",
        "C.20.52",
        "C.20.53",
        "C.20.59",
        "C.20.60",
        "C.21.10",
        "C.21.20",
        "C.22.10",
        "C.22.11",
        "C.22.19",
        "C.22.20",
        "C.22.21",
        "C.22.22",
        "C.22.23",
        "C.22.29",
        "C.23.10",
        "C.23.11",
        "C.23.12",
        "C.23.13",
        "C.23.14",
        "C.23.19",
        "C.23.20",
        "C.23.30",
        "C.23.31",
        "C.23.32",
        "C.23.40",
        "C.23.41",
        "C.23.42",
        "C.23.43",
        "C.23.44",
        "C.23.49",
        "C.23.50",
        "C.23.51",
        "C.23.52",
        "C.23.60",
        "C.23.61",
        "C.23.62",
        "C.23.63",
        "C.23.64",
        "C.23.65",
        "C.23.69",
        "C.23.70",
        "C.23.90",
        "C.23.91",
        "C.23.99",
        "C.24.10",
        "C.24.20",
        "C.24.30",
        "C.24.31",
        "C.24.32",
        "C.24.33",
        "C.24.34",
        "C.24.40",
        "C.24.41",
        "C.24.42",
        "C.24.43",
        "C.24.44",
        "C.24.45",
        "C.24.46",
        "C.24.50",
        "C.24.51",
        "C.24.52",
        "C.24.53",
        "C.24.54",
        "C.25.10",
        "C.25.11",
        "C.25.12",
        "C.25.20",
        "C.25.21",
        "C.25.29",
        "C.25.30",
        "C.25.40",
        "C.25.50",
        "C.25.60",
        "C.25.61",
        "C.25.62",
        "C.25.70",
        "C.25.71",
        "C.25.72",
        "C.25.73",
        "C.25.90",
        "C.25.91",
        "C.25.92",
        "C.25.93",
        "C.25.94",
        "C.25.99",
        "C.26.10",
        "C.26.11",
        "C.26.12",
        "C.26.20",
        "C.26.30",
        "C.26.40",
        "C.26.50",
        "C.26.51",
        "C.26.52",
        "C.26.60",
        "C.26.70",
        "C.26.80",
        "C.27.10",
        "C.27.11",
        "C.27.12",
        "C.27.20",
        "C.27.30",
        "C.27.31",
        "C.27.32",
        "C.27.33",
        "C.27.40",
        "C.27.50",
        "C.27.51",
        "C.27.52",
        "C.27.90",
        "C.28.10",
        "C.28.11",
        "C.28.12",
        "C.28.13",
        "C.28.14",
        "C.28.15",
        "C.28.20",
        "C.28.21",
        "C.28.22",
        "C.28.23",
        "C.28.24",
        "C.28.25",
        "C.28.29",
        "C.28.30",
        "C.28.40",
        "C.28.41",
        "C.28.49",
        "C.28.90",
        "C.28.91",
        "C.28.92",
        "C.28.93",
        "C.28.94",
        "C.28.95",
        "C.28.96",
        "C.28.99",
        "C.29.10",
        "C.29.20",
        "C.29.30",
        "C.29.31",
        "C.29.32",
        "C.30.10",
        "C.30.11",
        "C.30.12",
        "C.30.20",
        "C.30.30",
        "C.30.40",
        "C.30.90",
        "C.30.91",
        "C.30.92",
        "C.30.99",
        "C.31.00",
        "C.31.01",
        "C.31.02",
        "C.31.03",
        "C.31.09",
        "C.32.10",
        "C.32.11",
        "C.32.12",
        "C.32.13",
        "C.32.20",
        "C.32.30",
        "C.32.40",
        "C.32.50",
        "C.32.90",
        "C.32.91",
        "C.32.99",
        "C.33.10",
        "C.33.11",
        "C.33.12",
        "C.33.13",
        "C.33.14",
        "C.33.15",
        "C.33.16",
        "C.33.17",
        "C.33.19",
        "C.33.20",
        "D.35.10",
        "D.35.11",
        "D.35.12",
        "D.35.13",
        "D.35.14",
        "D.35.20",
        "D.35.21",
        "D.35.22",
        "D.35.23",
        "D.35.30",
        "E.36.00",
        "E.37.00",
        "E.38.10",
        "E.38.11",
        "E.38.12",
        "E.38.20",
        "E.38.21",
        "E.38.22",
        "E.38.30",
        "E.38.31",
        "E.38.32",
        "E.39.00",
        "F.41.10",
        "F.41.20",
        "F.42.10",
        "F.42.11",
        "F.42.12",
        "F.42.13",
        "F.42.20",
        "F.42.21",
        "F.42.22",
        "F.42.90",
        "F.42.91",
        "F.42.99",
        "F.43.10",
        "F.43.11",
        "F.43.12",
        "F.43.13",
        "F.43.20",
        "F.43.21",
        "F.43.22",
        "F.43.29",
        "F.43.30",
        "F.43.31",
        "F.43.32",
        "F.43.33",
        "F.43.34",
        "F.43.39",
        "F.43.90",
        "F.43.91",
        "F.43.99",
        "G.45.10",
        "G.45.11",
        "G.45.19",
        "G.45.20",
        "G.45.30",
        "G.45.31",
        "G.45.32",
        "G.45.40",
        "G.46.10",
        "G.46.11",
        "G.46.12",
        "G.46.13",
        "G.46.14",
        "G.46.15",
        "G.46.16",
        "G.46.17",
        "G.46.18",
        "G.46.19",
        "G.46.20",
        "G.46.21",
        "G.46.22",
        "G.46.23",
        "G.46.24",
        "G.46.30",
        "G.46.31",
        "G.46.32",
        "G.46.33",
        "G.46.34",
        "G.46.35",
        "G.46.36",
        "G.46.37",
        "G.46.38",
        "G.46.39",
        "G.46.40",
        "G.46.41",
        "G.46.42",
        "G.46.43",
        "G.46.44",
        "G.46.45",
        "G.46.46",
        "G.46.47",
        "G.46.48",
        "G.46.49",
        "G.46.50",
        "G.46.51",
        "G.46.52",
        "G.46.60",
        "G.46.61",
        "G.46.62",
        "G.46.63",
        "G.46.64",
        "G.46.65",
        "G.46.66",
        "G.46.69",
        "G.46.70",
        "G.46.71",
        "G.46.72",
        "G.46.73",
        "G.46.74",
        "G.46.75",
        "G.46.76",
        "G.46.77",
        "G.46.90",
        "G.47.10",
        "G.47.11",
        "G.47.19",
        "G.47.20",
        "G.47.21",
        "G.47.22",
        "G.47.23",
        "G.47.24",
        "G.47.25",
        "G.47.26",
        "G.47.29",
        "G.47.30",
        "G.47.40",
        "G.47.41",
        "G.47.42",
        "G.47.43",
        "G.47.50",
        "G.47.51",
        "G.47.52",
        "G.47.53",
        "G.47.54",
        "G.47.59",
        "G.47.60",
        "G.47.61",
        "G.47.62",
        "G.47.63",
        "G.47.64",
        "G.47.65",
        "G.47.70",
        "G.47.71",
        "G.47.72",
        "G.47.73",
        "G.47.74",
        "G.47.75",
        "G.47.76",
        "G.47.77",
        "G.47.78",
        "G.47.79",
        "G.47.80",
        "G.47.81",
        "G.47.82",
        "G.47.89",
        "G.47.90",
        "G.47.91",
        "G.47.99",
        "H.49.10",
        "H.49.20",
        "H.49.30",
        "H.49.31",
        "H.49.32",
        "H.49.39",
        "H.49.40",
        "H.49.41",
        "H.49.42",
        "H.49.50",
        "H.50.10",
        "H.50.20",
        "H.50.30",
        "H.50.40",
        "H.51.10",
        "H.51.20",
        "H.51.21",
        "H.51.22",
        "H.52.10",
        "H.52.20",
        "H.52.21",
        "H.52.22",
        "H.52.23",
        "H.52.24",
        "H.52.29",
        "H.53.10",
        "H.53.20",
        "I.55.10",
        "I.55.20",
        "I.55.30",
        "I.55.90",
        "I.56.10",
        "I.56.20",
        "I.56.21",
        "I.56.29",
        "I.56.30",
        "J.58.10",
        "J.58.11",
        "J.58.12",
        "J.58.13",
        "J.58.14",
        "J.58.19",
        "J.58.20",
        "J.58.21",
        "J.58.29",
        "J.59.10",
        "J.59.11",
        "J.59.12",
        "J.59.13",
        "J.59.14",
        "J.59.20",
        "J.60.10",
        "J.60.20",
        "J.61.10",
        "J.61.20",
        "J.61.30",
        "J.61.90",
        "J.62.00",
        "J.62.01",
        "J.62.02",
        "J.62.03",
        "J.62.09",
        "J.63.10",
        "J.63.11",
        "J.63.12",
        "J.63.90",
        "J.63.91",
        "J.63.99",
        "K.64.10",
        "K.64.11",
        "K.64.19",
        "K.64.20",
        "K.64.30",
        "K.64.90",
        "K.64.91",
        "K.64.92",
        "K.64.99",
        "K.65.10",
        "K.65.11",
        "K.65.12",
        "K.65.20",
        "K.65.30",
        "K.66.10",
        "K.66.11",
        "K.66.12",
        "K.66.19",
        "K.66.20",
        "K.66.21",
        "K.66.22",
        "K.66.29",
        "K.66.30",
        "L.68.10",
        "L.68.20",
        "L.68.30",
        "L.68.31",
        "L.68.32",
        "M.69.10",
        "M.69.20",
        "M.70.10",
        "M.70.20",
        "M.70.21",
        "M.70.22",
        "M.71.10",
        "M.71.11",
        "M.71.12",
        "M.71.20",
        "M.72.10",
        "M.72.11",
        "M.72.19",
        "M.72.20",
        "M.73.10",
        "M.73.11",
        "M.73.12",
        "M.73.20",
        "M.74.10",
        "M.74.20",
        "M.74.30",
        "M.74.90",
        "M.75.00",
        "N.77.10",
        "N.77.11",
        "N.77.12",
        "N.77.20",
        "N.77.21",
        "N.77.22",
        "N.77.29",
        "N.77.30",
        "N.77.31",
        "N.77.32",
        "N.77.33",
        "N.77.34",
        "N.77.35",
        "N.77.39",
        "N.77.40",
        "N.78.10",
        "N.78.20",
        "N.78.30",
        "N.79.10",
        "N.79.11",
        "N.79.12",
        "N.79.90",
        "N.80.10",
        "N.80.20",
        "N.80.30",
        "N.81.10",
        "N.81.20",
        "N.81.21",
        "N.81.22",
        "N.81.29",
        "N.81.30",
        "N.82.10",
        "N.82.11",
        "N.82.19",
        "N.82.20",
        "N.82.30",
        "N.82.90",
        "N.82.91",
        "N.82.92",
        "N.82.99",
        "O.84.10",
        "O.84.11",
        "O.84.12",
        "O.84.13",
        "O.84.20",
        "O.84.21",
        "O.84.22",
        "O.84.23",
        "O.84.24",
        "O.84.25",
        "O.84.30",
        "P.85.10",
        "P.85.20",
        "P.85.30",
        "P.85.31",
        "P.85.32",
        "P.85.40",
        "P.85.41",
        "P.85.42",
        "P.85.50",
        "P.85.51",
        "P.85.52",
        "P.85.53",
        "P.85.59",
        "P.85.60",
        "Q.86.10",
        "Q.86.20",
        "Q.86.21",
        "Q.86.22",
        "Q.86.23",
        "Q.86.90",
        "Q.87.10",
        "Q.87.20",
        "Q.87.30",
        "Q.87.90",
        "Q.88.10",
        "Q.88.90",
        "Q.88.91",
        "Q.88.99",
        "R.90.00",
        "R.90.01",
        "R.90.02",
        "R.90.03",
        "R.90.04",
        "R.91.01",
        "R.91.02",
        "R.91.03",
        "R.91.04",
        "R.92.00",
        "R.93.10",
        "R.93.11",
        "R.93.12",
        "R.93.13",
        "R.93.19",
        "R.93.20",
        "R.93.21",
        "R.93.29",
        "S.94.10",
        "S.94.11",
        "S.94.12",
        "S.94.20",
        "S.94.90",
        "S.94.91",
        "S.94.92",
        "S.94.99",
        "S.95.10",
        "S.95.11",
        "S.95.12",
        "S.95.20",
        "S.95.21",
        "S.95.22",
        "S.95.23",
        "S.95.24",
        "S.95.25",
        "S.95.29",
        "S.96.00",
        "S.96.01",
        "S.96.02",
        "S.96.03",
        "S.96.04",
        "S.96.09",
        "T.97.00",
        "T.98.10",
        "T.98.20",
        "U.99.00"
      ]
    },
    "naics_code": {
      "description": "North American Industry Classification System - NAICS Code",
      "type": "integer",
      "minimum": 10,
      "maximum": 999999
    },
    "name": {
      "description": "The name of the person or legal entity to be used for display and reference purposes.",
      "type": "string"
    },
    "national_reporting_code": {
      "description": "Unique identifier established by the national reporting system",
      "type": "string"
    },
    "parent_id": {
      "description": "The unique identifier for the ultimate parent of the person or legal entity.",
      "type": "string"
    },
    "pd_irb": {
      "description": "The probability of default as determined by internal ratings-based approach. Expressed as a percentage between 0 and 1. This value is used in regulatory capital calculations.",
      "type": "number",
      "minimum": 0,
      "maximum": 1
    },
    "pd_irb_ec": {
      "description": "The probability of default as determined by internal ratings-based approach. Expressed as a percentage between 0 and 1. This value is used in economic capital calculations.",
      "type": "number",
      "minimum": 0,
      "maximum": 1
    },
    "postal_code": {
      "description": "The post (zip) code in which the entity is domiciled.",
      "type": "string"
    },
    "relationship": {
      "description": "Relationship to parent.",
      "type": "string",
      "enum": [
        "branch",
        "head_office",
        "jv",
        "parent",
        "parent_branch",
        "parent_subsidiary",
        "participation",
        "subsidiary"
      ]
    },
    "reporting_relationship": {
      "description": "Relationship to reporting entity. See: relationship.",
      "type": "string",
      "enum": [
        "branch",
        "head_office",
        "jv",
        "parent",
        "parent_branch",
        "parent_subsidiary",
        "participation",
        "subsidiary"
      ]
    },
    "risk_country_code": {
      "description": "Two-letter country code describing where the risk for the security resides. In accordance with ISO 3166-1",
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/common.json#/country_code"
    },
    "risk_group_id": {
      "description": "The unique identifier for the group representing a single risk entity where no relationship of control exists",
      "type": "string"
    },
    "risk_group_id_2": {
      "description": "The secondary identifier for the secondary group representing a single risk entity where no relationship of control exists",
      "type": "string"
    },
    "scra": {
      "description": "Grade calculated using the Basel Standardised Credit Risk Assessment",
      "type": "string",
      "enum": [
        "a",
        "a_plus",
        "b",
        "c"
      ]
    },
    "sic_code": {
      "description": "The UK SIC 2007 standard industry and sector classification.",
      "type": "integer",
      "minimum": 0,
      "maximum": 99999
    },
    "snp_lt": {
      "description": "S&P long term credit ratings",
      "type": "string",
      "enum": [
        "aaa",
        "aa_plus",
        "aa",
        "aa_minus",
        "a_plus",
        "a",
        "a_minus",
        "bbb_plus",
        "bbb",
        "bbb_minus",
        "bb_plus",
        "bb",
        "bb_minus",
        "b_plus",
        "b",
        "b_minus",
        "ccc_plus",
        "ccc",
        "ccc_minus",
        "cc",
        "c",
        "d"
      ]
    },
    "snp_st": {
      "description": "S&P short term credit ratings",
      "type": "string",
      "enum": [
        "a1",
        "a2",
        "a3",
        "b",
        "c",
        "d"
      ]
    },
    "source": {
      "description": "The source(s) where this data originated. If more than one source needs to be stored for data lineage, it should be separated by a dash. eg. Source1-Source2",
      "type": "string"
    },
    "ssic_code": {
      "description": "The Singaporean standard industry and sector classification.",
      "type": "integer",
      "minimum": 0,
      "maximum": 99999
    },
    "total_assets": {
      "description": "The annual balance sheet total of the entity as at the last accounting reference date.",
      "type": "integer",
      "monetary": true
    },
    "turnover": {
      "description": "The annual turnover of the entity as at the last accounting reference date.",
      "type": "integer",
      "monetary": true
    },
    "type": {
      "description": "The designated financial or legal entity category this person or legal entity falls under",
      "type": "string",
      "enum": [
        "building_society",
        "ccp",
        "central_bank",
        "central_govt",
        "charity",
        "ciu",
        "community_charity",
        "corporate",
        "credit_institution",
        "credit_union",
        "deposit_broker",
        "export_credit_agency",
        "federal_credit_union",
        "financial",
        "financial_holding",
        "fund",
        "hedge_fund",
        "individual",
        "insurer",
        "intl_org",
        "investment_firm",
        "local_authority",
        "mdb",
        "mmkt_fund",
        "national_bank",
        "natural_person",
        "non_member_bank",
        "other",
        "other_financial",
        "other_pse",
        "partnership",
        "pension_fund",
        "pic",
        "pmi",
        "private_equity_fund",
        "private_fund",
        "promo_fed_home_loan",
        "promo_fed_reserve",
        "promotional_lender",
        "pse",
        "public_corporation",
        "qccp",
        "real_estate_fund",
        "regional_govt",
        "sme",
        "social_security_fund",
        "sovereign",
        "sspe",
        "state_credit_union",
        "state_member_bank",
        "state_owned_bank",
        "statutory_board",
        "supported_sme",
        "unincorporated_biz",
        "unregulated_financial"
      ]
    },
    "version_id": {
      "description": "The version identifier of the data such as the firm's internal batch identifier.",
      "type": "string"
    }
  },
  "required": [
    "id",
    "date"
  ],
  "additionalProperties": true
}>;

export type Example = FromSchema<{
  "$schema": "http://json-schema.org/draft-06/schema#",
  "title": "Example Schema",
  "description": "FIRE schema for representing and validating FIRE examples",
  "type": "object",
  "properties": {
    "comment": {
      "description": "Additional comments describing the FIRE example",
      "type": "string"
    },
    "data": {
      "description": "An object of FIRE data lists, with data types as keys",
      "type": "object",
      "properties": {
        "account": {
          "type": "array",
          "minItems": 1,
          "uniqueItems": true,
          "items": {
            "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/account.json#"
          }
        },
        "agreement": {
          "type": "array",
          "minItems": 1,
          "uniqueItems": true,
          "items": {
            "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/agreement.json#"
          }
        },
        "adjustment": {
          "type": "array",
          "minItems": 1,
          "uniqueItems": true,
          "items": {
            "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/adjustment.json#"
          }
        },
        "collateral": {
          "type": "array",
          "minItems": 1,
          "uniqueItems": true,
          "items": {
            "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/collateral.json#"
          }
        },
        "curve": {
          "type": "array",
          "minItems": 1,
          "uniqueItems": true,
          "items": {
            "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/curve.json#"
          }
        },
        "customer": {
          "type": "array",
          "minItems": 1,
          "uniqueItems": true,
          "items": {
            "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/customer.json#"
          }
        },
        "derivative_cash_flow": {
          "type": "array",
          "minItems": 1,
          "uniqueItems": true,
          "items": {
            "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/derivative_cash_flow.json#"
          }
        },
        "derivative": {
          "type": "array",
          "minItems": 1,
          "uniqueItems": true,
          "items": {
            "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/derivative.json#"
          }
        },
        "exchange_rate": {
          "type": "array",
          "minItems": 1,
          "uniqueItems": true,
          "items": {
            "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/exchange_rate.json#"
          }
        },
        "guarantor": {
          "type": "array",
          "minItems": 1,
          "uniqueItems": true,
          "items": {
            "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/guarantor.json#"
          }
        },
        "issuer": {
          "type": "array",
          "minItems": 1,
          "uniqueItems": true,
          "items": {
            "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/issuer.json#"
          }
        },
        "loan_transaction": {
          "type": "array",
          "minItems": 1,
          "uniqueItems": true,
          "items": {
            "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/loan_transaction.json#"
          }
        },
        "loan": {
          "type": "array",
          "minItems": 1,
          "uniqueItems": true,
          "items": {
            "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/loan.json#"
          }
        },
        "security": {
          "type": "array",
          "minItems": 1,
          "uniqueItems": true,
          "items": {
            "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/security.json#"
          }
        }
      },
      "additionalProperties": false,
      "anyOf": [
        {
          "required": [
            "account"
          ]
        },
        {
          "required": [
            "adjustment"
          ]
        },
        {
          "required": [
            "agreement"
          ]
        },
        {
          "required": [
            "collateral"
          ]
        },
        {
          "required": [
            "curve"
          ]
        },
        {
          "required": [
            "customer"
          ]
        },
        {
          "required": [
            "derivative"
          ]
        },
        {
          "required": [
            "derivative_cash_flow"
          ]
        },
        {
          "required": [
            "exchange_rate"
          ]
        },
        {
          "required": [
            "guarantot"
          ]
        },
        {
          "required": [
            "issuer"
          ]
        },
        {
          "required": [
            "loan"
          ]
        },
        {
          "required": [
            "loan_transaction"
          ]
        },
        {
          "required": [
            "security"
          ]
        }
      ]
    },
    "title": {
      "description": "Title of the FIRE product example",
      "type": "string"
    }
  },
  "additionalProperties": false,
  "required": [
    "comment",
    "data",
    "title"
  ]
}>;

export type ExchangeRate = FromSchema<{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Exchange Rate Schema",
  "description": "An Exchange Rate represents the conversion rate between two currencies.",
  "type": "object",
  "properties": {
    "id": {
      "description": "The unique identifier for the record within the firm.",
      "type": "string"
    },
    "date": {
      "description": "The observation or value date for the data in this object. Formatted as YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601.",
      "type": "string",
      "format": "date-time"
    },
    "base_currency_code": {
      "description": "The base currency in accordance with ISO 4217 standards.",
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/common.json#/currency_code"
    },
    "quote": {
      "description": "The amount of the quote currency received in exchange for 1 unit of the base currency.",
      "type": "number"
    },
    "quote_currency_code": {
      "description": "The quoted currency in accordance with ISO 4217 standards.",
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/common.json#/currency_code"
    },
    "source": {
      "description": "The source(s) where this data originated. If more than one source needs to be stored for data lineage, it should be separated by a dash. eg. Source1-Source2",
      "type": "string"
    },
    "version_id": {
      "description": "The version identifier of the data such as the firm's internal batch identifier.",
      "type": "string"
    }
  },
  "required": [
    "id",
    "date",
    "base_currency_code",
    "quote",
    "quote_currency_code"
  ],
  "additionalProperties": true
}>;

export type Guarantor = FromSchema<{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Guarantor Schema",
  "description": "Data schema to define a guarantor for a security.",
  "type": "object",
  "allOf": [
    {
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/entity.json"
    }
  ],
  "properties": {},
  "required": [
    "id",
    "date"
  ],
  "additionalProperties": true
}>;

export type Issuer = FromSchema<{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Issuer Schema",
  "description": "Data schema to define an issuer for a security.",
  "type": "object",
  "allOf": [
    {
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/entity.json"
    }
  ],
  "properties": {},
  "required": [
    "id",
    "date"
  ],
  "additionalProperties": true
}>;

export type Loan = FromSchema<{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Loan Schema",
  "description": "Data schema defining the characteristics of a loan product.",
  "type": "object",
  "properties": {
    "id": {
      "description": "The unique identifier for the record within the firm.",
      "type": "string"
    },
    "date": {
      "description": "The observation or value date for the data in this object. Formatted as YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601.",
      "type": "string",
      "format": "date-time"
    },
    "acc_fv_change_before_taxes": {
      "description": "Accumulated change in fair value before taxes.",
      "type": "integer",
      "monetary": true
    },
    "acc_fv_change_credit_risk": {
      "description": "Accumulated changes in fair value due to credit risk.",
      "type": "integer",
      "monetary": true
    },
    "accounting_treatment": {
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/common.json#/accounting_treatment"
    },
    "accrual_status": {
      "description": "The accrual status of the loan or line of credit.",
      "type": "string",
      "enum": [
        "accrual",
        "non_accrual",
        "securitised",
        "serviced_for_others"
      ]
    },
    "accrued_interest_12m": {
      "description": "The cumulative accrued interest over the past 12 months. Monetary type represented as a naturally positive integer number of cents/pence.",
      "type": "integer",
      "monetary": true
    },
    "accrued_interest_balance": {
      "description": "The accrued interest due at the next payment date. Monetary type represented as a naturally positive integer number of cents/pence.",
      "type": "integer",
      "monetary": true
    },
    "administration": {
      "description": "How the loan was administered by the lender.",
      "type": "string",
      "enum": [
        "other",
        "principal"
      ]
    },
    "arrears_arrangement": {
      "description": "The arrangement the lender has made with the borrower regarding the amount referenced in the arrears_balance.",
      "type": "string",
      "enum": [
        "formal",
        "interest_grace_period",
        "mi_claim_adv",
        "modified_tnc",
        "none",
        "possessed",
        "prin_def_rate",
        "prin_def_rate_term",
        "prin_def_term",
        "principal_defer",
        "principal_forgive",
        "rate_prin_forgive",
        "rate_red_frozen",
        "rate_term",
        "rate_term_prin_forgive",
        "recap",
        "refinancing",
        "renewal",
        "reo",
        "temporary",
        "term_ext",
        "term_prin_forgive",
        "term_recap"
      ]
    },
    "arrears_balance": {
      "description": "The balance of the loan or capital amount that is considered to be in arrears. Monetary type represented as a naturally positive integer number of cents/pence.",
      "type": "integer",
      "monetary": true
    },
    "asset_liability": {
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/common.json#/asset_liability"
    },
    "balance": {
      "description": "The balance of the loan or capital still to be repaid. Monetary type represented as a naturally positive integer number of cents/pence.",
      "type": "integer",
      "monetary": true
    },
    "base_rate": {
      "description": "The base rate represents the basis of the repayment rate on the borrowed funds at the given date as agreed in the terms of the loan.",
      "type": "string",
      "enum": [
        "FDTR",
        "UKBRBASE",
        "ZERO",
        "cert_dep",
        "cofi",
        "cofi_11th",
        "cofi_nm",
        "cofi_other",
        "cosi",
        "mta",
        "other",
        "prime",
        "sofr",
        "sofr_1m",
        "sofr_1y",
        "sofr_3m",
        "sofr_6m",
        "sofr_other",
        "tbill",
        "tbill_1y",
        "tbill_3m",
        "tbill_3y",
        "tbill_5y",
        "tbill_6m",
        "tbill_other"
      ]
    },
    "behavioral_curve_id": {
      "description": "The unique identifier for the behavioral curve used by the financial institution.",
      "type": "string"
    },
    "behavioral_end_date": {
      "description": "Behavioral end date (as opposed to contractual). YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601",
      "type": "string",
      "format": "date-time"
    },
    "beneficiary_id": {
      "description": "The unique identifier for the beneficiary of the loan cashflows.",
      "type": "string"
    },
    "cb_haircut": {
      "description": "The haircut as determined by the firm's central bank",
      "type": "number",
      "minimum": 0,
      "maximum": 1
    },
    "ccf": {
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/common.json#/ccf"
    },
    "cost_center_code": {
      "description": "The organizational unit or sub-unit to which costs/profits are booked.",
      "type": "string"
    },
    "count": {
      "description": "Describes the number of loans aggregated into a single row.",
      "type": "integer",
      "minimum": 1
    },
    "country_code": {
      "description": "Two-letter country code for product location/jurisdiction. In accordance with ISO 3166-1.",
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/common.json#/country_code"
    },
    "cr_approach": {
      "description": "Specifies the approved credit risk rwa calculation approach to be applied to the exposure.",
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/common.json#/cr_approach"
    },
    "credit_process": {
      "description": "Identifier for how a loan is credit assessed during the underwriting process",
      "type": "string",
      "enum": [
        "delinquency_managed",
        "graded",
        "rated",
        "scored"
      ]
    },
    "cum_recoveries": {
      "description": "The total amount recovered since the date of default of the instrument.",
      "type": "integer",
      "minimum": 0,
      "monetary": true
    },
    "cum_write_offs": {
      "description": "The portion of the loan which has been written off.",
      "type": "integer",
      "minimum": 0,
      "monetary": true
    },
    "currency_code": {
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/common.json#/currency_code"
    },
    "customer_id": {
      "description": "The unique identifier used by the financial institution to identify the customer.",
      "type": "string"
    },
    "customers": {
      "description": "The list of customers for this loan",
      "type": "array",
      "minItems": 1,
      "uniqueItems": true,
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "description": "The unique identifier for the customer/s within the financial institution.",
            "type": "string"
          },
          "income_amount": {
            "description": "The reference income used for the customer(s) for this loan. Monetary type represented as an integer number of cents/pence.",
            "type": "integer",
            "minimum": 0,
            "monetary": true
          }
        },
        "required": [
          "id",
          "income_amount"
        ]
      }
    },
    "day_count_convention": {
      "description": "The standardised methodology for calculating the number of days between two dates. It is used to calculate the amount of accrued interest or the present value.",
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/common.json#/day_count_convention"
    },
    "deal_id": {
      "description": "Identifier used for linking this product as part of a larger deal. e.g. Two components of a single loan or matching a securitisation with it's underlying loan.",
      "type": "string"
    },
    "default_date": {
      "description": "Date of default.",
      "type": "string",
      "format": "date-time"
    },
    "deferred_fees": {
      "description": "Deferred fees are deferred payments subject to prepayment risk and not included in the balance.",
      "type": "integer",
      "monetary": true
    },
    "ead": {
      "description": "The EAD field allows users to input monetary exposure-at-default values across the loan's lifecycle. Upon default, this field must be updated to reflect the final realised EAD value — that is, the actual exposure outstanding at the moment of default.",
      "type": "integer",
      "monetary": true
    },
    "ead_irb_ec": {
      "description": "The expected gross dollar exposure for each facility upon a borrower's default as determined by internal ratings-based approach. This value is used in economic capital calculations.",
      "type": "integer",
      "monetary": true
    },
    "economic_loss": {
      "description": "The definition of loss, used in estimating Loss Given Default for the reporting segment. When measuring economic loss, as opposed to accounting loss",
      "monetary": true,
      "type": "integer"
    },
    "el_irb": {
      "description": "The best estimate of expected loss when in default.",
      "type": "number"
    },
    "encumbrance_amount": {
      "description": "The amount of the loan that is encumbered by potential future commitments or legal liabilities. Monetary type represented as a naturally positive integer number of cents/pence.",
      "type": "integer",
      "minimum": 0,
      "monetary": true
    },
    "encumbrance_end_date": {
      "description": "Date encumbrance amount goes to zero. YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601",
      "type": "string",
      "format": "date-time"
    },
    "encumbrance_type": {
      "description": "The type of the encumbrance causing the encumbrance_amount.",
      "type": "string",
      "enum": [
        "abs",
        "cb_funding",
        "covered_bond"
      ]
    },
    "end_date": {
      "description": "YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601",
      "type": "string",
      "format": "date-time"
    },
    "facility_currency_code": {
      "description": "The currency of the credit facility if not the same as loan currency_code.",
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/common.json#/currency_code"
    },
    "facility_id": {
      "description": "The code assigned by the financial institution to identify a facility.",
      "type": "string"
    },
    "fees": {
      "description": "The fees associated with the loan.",
      "type": "integer",
      "monetary": true
    },
    "first_arrears_date": {
      "description": "The first date on which this loan was in arrears.",
      "type": "string",
      "format": "date-time"
    },
    "first_payment_date": {
      "description": "The first payment date for interest payments.",
      "type": "string",
      "format": "date-time"
    },
    "forbearance_date": {
      "description": "The date on which the first forbearance measure was granted to this product.  Format should be YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601",
      "type": "string",
      "format": "date-time"
    },
    "fraud_loss": {
      "description": "The total value of accounting losses incurred by the Financial Institution due to fraudulent activities within the reporting segment.",
      "type": "integer",
      "monetary": true
    },
    "frr_id": {
      "description": "The internal facility risk rating assigned to a facility based on its specific risk characteristics, including collateral and seniority.",
      "type": "string"
    },
    "fvh_level": {
      "description": "Fair value hierarchy category according to IFRS 13.93 (b)",
      "type": "integer",
      "minimum": 1,
      "maximum": 3
    },
    "guarantee_amount": {
      "description": "The amount of the loan that is guaranteed by the guarantor. Monetary type represented as a naturally positive integer number of cents/pence.",
      "type": "integer",
      "minimum": 0,
      "monetary": true
    },
    "guarantor_id": {
      "description": "The unique identifier for the guarantor of the loan.",
      "type": "string"
    },
    "impairment_amount": {
      "description": "The impairment amount for a loan is the allowance for loan impairments set aside by the firm that accounts for the event that the loan becomes impaired in the future.",
      "type": "integer",
      "minimum": 0,
      "monetary": true
    },
    "impairment_date": {
      "description": "The date upon which the product became considered impaired. Format should be YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601",
      "type": "string",
      "format": "date-time"
    },
    "impairment_status": {
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/common.json#/impairment_status"
    },
    "impairment_type": {
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/common.json#/impairment_type"
    },
    "income_assessment": {
      "description": "Was the loan assessed against a single or joint incomes?",
      "type": "string",
      "enum": [
        "joint",
        "joint_not_evidenced",
        "single",
        "single_not_evidenced"
      ]
    },
    "interest_repayment_frequency": {
      "description": "Repayment frequency of the loan interest, if different from principal.",
      "type": "string",
      "enum": [
        "daily",
        "weekly",
        "bi_weekly",
        "monthly",
        "bi_monthly",
        "quarterly",
        "semi_annually",
        "annually",
        "at_maturity",
        "biennially",
        "sesquiennially"
      ]
    },
    "issuer_id": {
      "description": "The unique identifier for the issuer of the loan.",
      "type": "string",
      "maxLength": 20
    },
    "last_arrears_date": {
      "description": "The last date on which this loan was in arrears.",
      "type": "string",
      "format": "date-time"
    },
    "last_drawdown_date": {
      "description": "The last date on which a drawdown was made on this loan",
      "type": "string",
      "format": "date-time"
    },
    "last_payment_date": {
      "description": "The final payment date for interest payments, often coincides with end_date.",
      "type": "string",
      "format": "date-time"
    },
    "last_recovery_date": {
      "description": "Date of most recent recovery in the reporting quarter.",
      "type": "string",
      "format": "date-time"
    },
    "last_write_off_date": {
      "description": "Date of Financial Institution's most recent Write Off in the reporting quarter.",
      "type": "string",
      "format": "date-time"
    },
    "ledger_code": {
      "description": "The internal ledger code or line item name.",
      "type": "string"
    },
    "lgd_downturn": {
      "description": "The loss given default in the event of an economic downturn. Percentage between 0 an 1.",
      "type": "number"
    },
    "lgd_floored": {
      "description": "The final LGD value after the relevant floors have been applied. To be used in the IRB RWA calculations",
      "type": "number"
    },
    "lgd_irb": {
      "description": "The loss given default as determined by internal ratings-based approach. Expressed as a percentage between 0 and 1. This value is used in regulatory capital calculations.",
      "type": "number"
    },
    "lgd_irb_ec": {
      "description": "The loss given default as determined by internal ratings-based approach. Expressed as a percentage between 0 and 1. This value is used in economic capital calculations.",
      "type": "number",
      "minimum": 0,
      "maximum": 1
    },
    "limit_amount": {
      "description": "The total credit limit on the loan. Monetary type represented as a naturally positive integer number of cents/pence.",
      "type": "integer",
      "minimum": 0,
      "monetary": true
    },
    "lnrf_amount": {
      "description": "The total amount of non-recourse funding linked to the loan. Monetary type represented as a naturally positive integer number of cents/pence.",
      "type": "integer",
      "minimum": 0,
      "monetary": true
    },
    "minimum_balance": {
      "description": "Indicates the minimum balance of each loan within the aggregate.",
      "type": "integer",
      "monetary": true
    },
    "minimum_balance_eur": {
      "description": "Indicates the minimum balance, in Euros, of each loan within the aggregate.",
      "type": "integer",
      "monetary": true
    },
    "movement": {
      "description": "The movement parameter describes how the loan arrived to the firm.",
      "type": "string",
      "enum": [
        "acquired",
        "acquired_impaired",
        "other",
        "securitised",
        "sold",
        "syndicated",
        "syndicated_lead"
      ]
    },
    "next_payment_date": {
      "description": "The next date at which interest will be paid or accrued_interest balance returned to zero.",
      "type": "string",
      "format": "date-time"
    },
    "next_repricing_date": {
      "description": "The date on which the interest rate of the loan will be re-calculated. YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601.",
      "type": "string",
      "format": "date-time"
    },
    "notional_amount": {
      "description": "The original notional amount of the loan. Monetary type represented as a naturally positive integer number of cents/pence.",
      "type": "integer",
      "monetary": true
    },
    "on_balance_sheet": {
      "description": "Is the loan reported on the balance sheet of the financial institution?",
      "type": "boolean"
    },
    "orig_credit_score": {
      "description": "The credit score of the customer at origination of the product using a commercially available credit bureau score.",
      "type": "integer"
    },
    "orig_limit_amount": {
      "description": "The original line of credit amount that was granted at the origination of the facility",
      "type": "integer",
      "monetary": true
    },
    "orig_notional": {
      "description": "The notional of the loan at origination.",
      "type": "integer",
      "monetary": true
    },
    "originator_id": {
      "description": "The unique identifier used by the financial institution to identify the originator of the loan product.",
      "type": "string"
    },
    "originator_type": {
      "description": "The type of financial institution that acted as the originator of the loan product.",
      "type": "string",
      "enum": [
        "mortgage_lender",
        "other",
        "spv"
      ]
    },
    "parent_facility_id": {
      "description": "The parent code assigned by the financial institution to identify a facility.",
      "type": "string"
    },
    "participation_int": {
      "description": "For participated or syndicated credit facilities that have closed and settled, the percentage of the total loan commitment held by the reporting entity. Refer to https://www.federalreserve.gov/apps/reportingforms/Report/Index/FR_Y-14Q for more information.",
      "type": "number"
    },
    "participation_type": {
      "description": "For participated or syndicated credit facilities that have closed and settled, indicates the type of participation in the loan. Refer to https://www.federalreserve.gov/apps/reportingforms/Report/Index/FR_Y-14Q for more information.",
      "type": "string",
      "enum": [
        "agent_non_snc",
        "agent_snc",
        "none",
        "participant_non_snc",
        "participant_snc"
      ]
    },
    "pd_irb": {
      "description": "The probability of default as determined by internal rating-based methods. Percentage between 0 an 1.",
      "type": "number",
      "minimum": 0,
      "maximum": 1
    },
    "pd_irb_ec": {
      "description": "The probability of default as determined by internal ratings-based approach. Expressed as a percentage between 0 and 1. This value is used in economic capital calculations.",
      "type": "number",
      "minimum": 0,
      "maximum": 1
    },
    "pd_retail_irb": {
      "description": "The retail probability of default as determined by internal rating-based methods. Percentage between 0 an 1.",
      "type": "number"
    },
    "prev_payment_date": {
      "description": "The most recent previous date at which interest was paid or accrued_interest balance returned to zero.",
      "type": "string",
      "format": "date-time"
    },
    "product_name": {
      "description": "The name of the product as given by the financial institution to be used for display and reference purposes.",
      "type": "string"
    },
    "provision_amount": {
      "description": "The amount of reserves that is provisioned by the financial institution to cover the potential loss on the loan. Monetary type represented as a naturally positive integer number of cents/pence.",
      "type": "integer",
      "minimum": 0,
      "monetary": true
    },
    "provision_type": {
      "description": "The provision type parameter details the provisions the issuing firm has allocated to cover potential losses from issuing a loan.",
      "type": "string",
      "enum": [
        "none",
        "other"
      ]
    },
    "purpose": {
      "description": "The underlying reason the borrower has requested the loan.",
      "type": "string",
      "enum": [
        "agriculture",
        "bridging_loan",
        "buy_to_let",
        "buy_to_let_construct",
        "buy_to_let_further_advance",
        "buy_to_let_house_purchase",
        "buy_to_let_other",
        "buy_to_let_remortgage",
        "cash_out",
        "commercial",
        "commercial_property",
        "commodities_finance",
        "construction",
        "consumer_buy_to_let",
        "debt_consolidation",
        "education",
        "first_time_buyer",
        "first_time_buyer_cstr",
        "further_advance",
        "further_advance_cstr",
        "house_purchase",
        "house_purchase_cstr",
        "ips",
        "lifetime_mortgage",
        "medical",
        "non_b20",
        "object_finance",
        "object_finance_hq",
        "operational",
        "operational_non_sym",
        "operational_sym",
        "other",
        "project_finance",
        "project_hq_phase",
        "project_pre_op",
        "promotional",
        "rate",
        "reference",
        "refinance",
        "remortgage",
        "remortgage_construct",
        "remortgage_other",
        "remortgage_othr_cstr",
        "renovation",
        "speculative_property",
        "term"
      ]
    },
    "rate": {
      "description": "The full interest rate applied to the loan balance. Note that for tracker rates this includes the benchmark (ie. not the credit spread). Percentages represented as a decimal/float, so 1.5 implies 1.5%.",
      "type": "number"
    },
    "rate_type": {
      "description": "Describes the type of interest rate applied to the loan.",
      "type": "string",
      "enum": [
        "combined",
        "fixed",
        "tracker",
        "variable"
      ]
    },
    "ref_income_amount": {
      "description": "The reference income used for the customer(s) for this loan. Monetary type represented as an integer number of cents/pence.",
      "type": "integer",
      "minimum": 0,
      "monetary": true
    },
    "regulated": {
      "description": "Is this loan regulated or unregulated?",
      "type": "boolean"
    },
    "regulatory_book": {
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/common.json#/regulatory_book"
    },
    "repayment_frequency": {
      "description": "Repayment frequency of the loan.",
      "type": "string",
      "enum": [
        "daily",
        "weekly",
        "bi_weekly",
        "monthly",
        "bi_monthly",
        "quarterly",
        "semi_annually",
        "annually",
        "at_maturity",
        "biennially",
        "sesquiennially"
      ]
    },
    "repayment_type": {
      "description": "Repayment type of the loan refers to whether the customer will be repaying capital + interest, just interest or a combination of the two.",
      "type": "string",
      "enum": [
        "combined",
        "interest_only",
        "other",
        "repayment"
      ]
    },
    "reporting_entity_name": {
      "description": "The name of the reporting legal entity for display purposes.",
      "type": "string"
    },
    "reporting_id": {
      "description": "The internal ID for the legal entity under which the account is being reported.",
      "type": "string"
    },
    "repurchase_status": {
      "description": "The current status of the repurchase of the loan.",
      "type": "string",
      "enum": [
        "complete_no_repurchase",
        "complete_repurchased",
        "in_process",
        "initiated"
      ]
    },
    "resolution_date": {
      "description": "Date of resolution of the defaulted facility.",
      "type": "string",
      "format": "date-time"
    },
    "reversion_date": {
      "description": "The timestamp that indicates the end of an initial period where the 'rate' is applied to a loan. After this the interest is calculated using the 'reversion_rate'. YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601.",
      "type": "string",
      "format": "date-time"
    },
    "reversion_rate": {
      "description": "The rate to which the loan will revert after the reversion date. Percentages represented as a decimal/float, so 1.5 implies 1.5%.",
      "type": "number"
    },
    "review_date": {
      "description": "The currently scheduled review date for Counterparty exposure. This date should be set in the future. Formatted as YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601.",
      "type": "string",
      "format": "date-time"
    },
    "risk_country_code": {
      "description": "Two-letter country code describing where the risk for the product resides. In accordance with ISO 3166-1",
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/common.json#/country_code"
    },
    "risk_weight_irb": {
      "description": "The internal risk weight represented as a decimal/float such that 1.5% is 0.015.",
      "type": "number"
    },
    "risk_weight_std": {
      "description": "The standardised approach risk weight represented as a decimal/float such that 1.5% is 0.015.",
      "type": "number"
    },
    "secured": {
      "description": "Is this loan secured or unsecured?",
      "type": "boolean"
    },
    "seniority": {
      "description": "The seniority of the security in the event of sale or bankruptcy of the issuer.",
      "type": "string",
      "enum": [
        "mezzanine",
        "pari_passu",
        "senior_secured",
        "senior_unsecured",
        "subordinated_secured",
        "subordinated_unsecured"
      ]
    },
    "servicer_id": {
      "description": "This is the unique id to identify the servicer of a loan.",
      "type": "string"
    },
    "servicing": {
      "description": "The method by which the loan shall be repaid",
      "type": "string",
      "enum": [
        "business",
        "pension",
        "rent",
        "salary"
      ]
    },
    "servicing_currency_code": {
      "description": "Identify the currency in which a loan shall be repaid.",
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/common.json#/currency_code"
    },
    "source": {
      "description": "The source(s) where this data originated. If more than one source needs to be stored for data lineage, it should be separated by a dash. eg. Source1-Source2",
      "type": "string"
    },
    "start_date": {
      "description": "The timestamp that the trade or financial product commences. YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601.",
      "type": "string",
      "format": "date-time"
    },
    "status": {
      "description": "Describes if the loan is active or been cancelled.",
      "type": "string",
      "enum": [
        "actual",
        "cancellable",
        "cancelled",
        "closed",
        "committed",
        "defaulted",
        "frozen",
        "revolving"
      ]
    },
    "trade_date": {
      "description": "The timestamp that the trade or financial product terms are agreed. YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601.",
      "type": "string",
      "format": "date-time"
    },
    "type": {
      "description": "The form of the loan product administered by the financial institution, with regards to common regulatory classifications.",
      "type": "string",
      "enum": [
        "auto",
        "cd",
        "charge_card",
        "commercial",
        "commercial_property",
        "corporate_card",
        "credit_card",
        "credit_facility",
        "education",
        "financial_lease",
        "heloan",
        "heloc",
        "heloc_lockout",
        "liquidity_facility",
        "mortgage",
        "mortgage_charter",
        "mortgage_cra",
        "mortgage_fha_project",
        "mortgage_fha_res",
        "mortgage_hud235",
        "mortgage_no_pmi",
        "mortgage_pmi",
        "mortgage_va",
        "multiccy_facility",
        "new_auto",
        "nostro",
        "other",
        "personal",
        "q_reverse_mortgage",
        "reverse_mortgage",
        "trade_finance",
        "used_auto"
      ]
    },
    "version_id": {
      "description": "The version identifier of the data such as the firm's internal batch identifier.",
      "type": "string"
    },
    "vol_adj": {
      "description": "The volatility adjustment appropriate to the exposure.",
      "type": "number"
    }
  },
  "required": [
    "id",
    "date"
  ],
  "additionalProperties": true
}>;

export type LoanCashFlow = FromSchema<{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Loan Cash Flow Schema",
  "description": "A loan cash flow represents the future movement of cash as part of contractually agreed payments for an existing loan.",
  "type": "object",
  "properties": {
    "id": {
      "description": "The unique identifier for the record within the firm.",
      "type": "string"
    },
    "date": {
      "description": "The observation or value date for the data in this object. Formatted as YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601.",
      "type": "string",
      "format": "date-time"
    },
    "amount": {
      "description": "The size of the cash flow. Monetary type represented as a naturally positive integer number of cents/pence denominated in the currency code.",
      "type": "integer",
      "monetary": true
    },
    "currency_code": {
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/common.json#/currency_code"
    },
    "loan_id": {
      "description": "The unique identifier for the affected loan/s within the financial institution.",
      "type": "string"
    },
    "payment_date": {
      "description": "The timestamp that the cash flow will occur or was paid. YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601.",
      "type": "string",
      "format": "date-time"
    },
    "source": {
      "description": "The source(s) where this data originated. If more than one source needs to be stored for data lineage, it should be separated by a dash. eg. Source1-Source2",
      "type": "string"
    },
    "type": {
      "description": "The type of the payment, signifying whether interest or principal is being paid.",
      "type": "string",
      "enum": [
        "interest",
        "principal"
      ]
    },
    "version_id": {
      "description": "The version identifier of the data such as the firm's internal batch identifier.",
      "type": "string"
    }
  },
  "required": [
    "id",
    "date",
    "amount",
    "currency_code",
    "loan_id",
    "type",
    "payment_date"
  ],
  "additionalProperties": true
}>;

export type LoanTransaction = FromSchema<{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Loan Transaction Schema",
  "description": "A Loan Transaction is an event that has an impact on a loan, typically the balance.",
  "type": "object",
  "properties": {
    "id": {
      "description": "The unique identifier for the record within the firm.",
      "type": "string"
    },
    "date": {
      "description": "The observation or value date for the data in this object. Formatted as YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601.",
      "type": "string",
      "format": "date-time"
    },
    "amount": {
      "description": "The size of the transaction in the loan transaction event. Monetary type represented as a naturally positive integer number of cents/pence.",
      "type": "integer",
      "monetary": true
    },
    "currency_code": {
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/common.json#/currency_code"
    },
    "loan_id": {
      "description": "The unique identifier for the affected loan/s within the financial institution.",
      "type": "string"
    },
    "source": {
      "description": "The source(s) where this data originated. If more than one source needs to be stored for data lineage, it should be separated by a dash. eg. Source1-Source2",
      "type": "string"
    },
    "type": {
      "description": "The type of impact on the balance of the loan.",
      "type": "string",
      "enum": [
        "acquisition",
        "advance",
        "capital_repayment",
        "capitalisation",
        "commitment",
        "due",
        "further_advance",
        "interest",
        "interest_repayment",
        "other",
        "received",
        "recovery",
        "sale",
        "securitisation",
        "write_off",
        "write_off_bankruptcy"
      ]
    },
    "value_date": {
      "description": "The timestamp that the transaction was valued or took place. YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601.",
      "type": "string",
      "format": "date-time"
    },
    "version_id": {
      "description": "The version identifier of the data such as the firm's internal batch identifier.",
      "type": "string"
    }
  },
  "required": [
    "id",
    "date",
    "amount",
    "loan_id"
  ],
  "additionalProperties": true
}>;

export type RiskRating = FromSchema<{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Risk Rating",
  "description": "A risk rating entry for a risk rating system",
  "type": "object",
  "properties": {
    "id": {
      "type": "string",
      "description": "Unique identifier for the risk rating"
    },
    "date": {
      "type": "string",
      "description": "The observation or value date for the data in this object. Formatted as YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601.",
      "format": "date-time"
    },
    "description": {
      "type": "string",
      "description": "A description of the internal risk rating."
    },
    "lgd_max": {
      "type": "number",
      "minimum": 0,
      "maximum": 1,
      "description": "Maximum Loss Given Default, representing the highest expected loss as a percentage of exposure at default."
    },
    "lgd_min": {
      "type": "number",
      "minimum": 0,
      "maximum": 1,
      "description": "Minimum Loss Given Default, representing the lowest expected loss as a percentage of exposure at default."
    },
    "name": {
      "type": "string",
      "description": "The name or classification of the risk rating, used for reporting and segmentation."
    },
    "pd_max": {
      "type": "number",
      "minimum": 0,
      "maximum": 1,
      "description": "Maximum Probability of Default"
    },
    "pd_min": {
      "type": "number",
      "minimum": 0,
      "maximum": 1,
      "description": "Minimum Probability of Default"
    },
    "risk_rating_system_id": {
      "type": "string",
      "description": "Reference to the risk rating system that this Internal Risk Rating belongs to"
    },
    "source": {
      "description": "The source where this data originated.",
      "type": "string"
    },
    "version_id": {
      "description": "The version identifier of the data such as the firm's internal batch identifier.",
      "type": "string"
    }
  },
  "required": [
    "id",
    "date",
    "name",
    "risk_rating_system_id"
  ]
}>;

export type Security = FromSchema<{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Security Schema",
  "description": "A security represents a tradable financial instrument held or financed by an institution for investment or collateral.",
  "type": "object",
  "properties": {
    "id": {
      "description": "The unique identifier for the record within the firm.",
      "type": "string"
    },
    "date": {
      "description": "The observation or value date for the data in this object. Formatted as YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601.",
      "type": "string",
      "format": "date-time"
    },
    "acc_fv_change_before_taxes": {
      "description": "Accumulated change in fair value before taxes.",
      "type": "integer",
      "monetary": true
    },
    "acc_fv_change_credit_risk": {
      "description": "Accumulated changes in fair value due to credit risk.",
      "type": "integer",
      "monetary": true
    },
    "accounting_treatment": {
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/common.json#/accounting_treatment"
    },
    "accrued_interest": {
      "description": "The accrued interest since the last payment date and due at the next payment date. Monetary type represented as an integer number of cents/pence.",
      "type": "integer",
      "monetary": true
    },
    "asset_liability": {
      "description": "Is the security (valued at either amortised cost or fair value) an asset or a liability on the firm's balance sheet.",
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/common.json#/asset_liability"
    },
    "attachment_point": {
      "description": "The threshold at which losses within the pool of underlying exposures would start to be allocated to the relevant securitisation position.",
      "type": "number",
      "minimum": 0,
      "maximum": 1
    },
    "balance": {
      "description": "Outstanding amount including accrued interest. Monetary integer number of cents/pence.",
      "type": "integer",
      "monetary": true
    },
    "base_rate": {
      "description": "The base rate represents the basis of the rate on the balance at the given date as agreed in the terms of the financial product.",
      "type": "string",
      "enum": [
        "FDTR",
        "UKBRBASE",
        "ZERO"
      ]
    },
    "break_dates": {
      "description": "Dates where this contract can be broken (by either party). Formatted as YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601.",
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "string",
        "format": "date-time"
      }
    },
    "call_dates": {
      "description": "Dates where this contract can be called (by the customer). Formatted as YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601.",
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "string",
        "format": "date-time"
      }
    },
    "call_type": {
      "description": "The call mechanism, if present, for the issuance. For securitisations and other callable securities.",
      "type": "string",
      "enum": [
        "clean_up",
        "clean_up_reg",
        "other"
      ]
    },
    "capital_tier": {
      "description": "The capital tiers based on own funds requirements.",
      "type": "string",
      "enum": [
        "add_tier_1",
        "anc_tier_2",
        "anc_tier_3",
        "at1_grandfathered",
        "bas_tier_2",
        "bas_tier_3",
        "ce_tier_1",
        "cet1_grandfathered",
        "t2_grandfathered",
        "tier_1",
        "tier_2",
        "tier_3"
      ]
    },
    "cb_haircut": {
      "description": "The haircut as determined by the firm's central bank",
      "type": "number",
      "minimum": 0,
      "maximum": 1
    },
    "ccf": {
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/common.json#/ccf"
    },
    "ccr_approach": {
      "description": "Specifies the approved counterparty credit risk methodology for calculating exposures.",
      "type": "string",
      "enum": [
        "imm",
        "oem",
        "sa",
        "ssa"
      ]
    },
    "cost_center_code": {
      "description": "The organizational unit or sub-unit to which costs/profits are booked.",
      "type": "string"
    },
    "country_code": {
      "description": "Two-letter country code for security location/jurisdiction. In accordance with ISO 3166-1.",
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/common.json#/country_code"
    },
    "cover_pool_balance": {
      "description": "The balance of the assets that are held in the cover pool",
      "type": "integer",
      "minimum": 0,
      "monetary": true
    },
    "cqs_irb": {
      "description": "The credit quality step for internal ratings based approach.",
      "type": "integer",
      "minimum": 1,
      "maximum": 12
    },
    "cqs_standardised": {
      "description": "The credit quality step for standardised approach.",
      "type": "integer",
      "minimum": 1,
      "maximum": 17
    },
    "cr_approach": {
      "description": "Specifies the approved credit risk rwa calculation approach to be applied to the exposure.",
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/common.json#/cr_approach"
    },
    "csa_id": {
      "description": "The unique identifier of the credit support annex this security falls under. Typically where used as derivatives collateral.",
      "type": "string"
    },
    "cum_write_offs": {
      "description": "The portion of the security which has been written off.",
      "type": "integer",
      "minimum": 0,
      "monetary": true
    },
    "currency_code": {
      "description": "Actual currency of the security in accordance with ISO 4217 standards. It should be consistent with balance, accrued_interest, guarantee_amount and other monetary amounts.",
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/common.json#/currency_code"
    },
    "customer_id": {
      "description": "The unique identifier used by the financial institution to identify the customer for this product.",
      "type": "string"
    },
    "day_count_convention": {
      "description": "The standardised methodology for calculating the number of days between two dates. It is used to calculate the amount of accrued interest or the present value.",
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/common.json#/day_count_convention"
    },
    "dbrs_lt": {
      "description": "DBRS long term credit ratings",
      "type": "string",
      "enum": [
        "aaa",
        "aa_h",
        "aa",
        "aa_l",
        "a_h",
        "a",
        "a_l",
        "bbb_h",
        "bbb",
        "bbb_l",
        "bb_h",
        "bb",
        "bb_l",
        "b_h",
        "b",
        "b_l",
        "ccc_h",
        "ccc",
        "ccc_l",
        "cc",
        "c",
        "d"
      ]
    },
    "dbrs_st": {
      "description": "DBRS short term credit ratings",
      "type": "string",
      "enum": [
        "r1_h",
        "r1_m",
        "r1_l",
        "r2_h",
        "r2_m",
        "r2_l",
        "r3",
        "r4",
        "r5",
        "d"
      ]
    },
    "deal_id": {
      "description": "The unique identifier used by the financial institution to identify the deal for this product that links it to other products of the same or different type.",
      "type": "string"
    },
    "description": {
      "description": "A more user-friendly description of the security.",
      "type": "string"
    },
    "detachment_point": {
      "description": "The threshold at which losses within the pool of underlying exposures would result in a complete loss of principal for the tranche containing the relevant securitisation position.",
      "type": "number",
      "minimum": 0,
      "maximum": 1
    },
    "distribution_type": {
      "description": "The instrument's coupon/dividend distribution type, such as cumulative or noncumulative. Refer to https://www.federalreserve.gov/apps/reportingforms/Report/Index/FR_Y-14Q for more information.",
      "type": "string",
      "enum": [
        "cumulative",
        "non_cumulative"
      ]
    },
    "encumbrance_amount": {
      "description": "The amount of the security that is encumbered by potential future commitments or legal liabilities such as within a repo pool. Monetary type represented as a naturally positive integer number of cents/pence.",
      "type": "integer",
      "minimum": 0,
      "monetary": true
    },
    "end_date": {
      "description": "YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601",
      "type": "string",
      "format": "date-time"
    },
    "excess_spread_type": {
      "description": "Excess spread",
      "type": "string",
      "enum": [
        "fixed",
        "fixed_trapped",
        "none",
        "variable",
        "variable_trapped"
      ]
    },
    "fees": {
      "description": "The fees associated with the security.",
      "type": "integer",
      "monetary": true
    },
    "first_arrears_date": {
      "description": "The first date on which this security was in arrears.",
      "type": "string",
      "format": "date-time"
    },
    "first_payment_date": {
      "description": "The first payment date for interest payments.",
      "type": "string",
      "format": "date-time"
    },
    "fitch_lt": {
      "description": "Fitch long term credit ratings",
      "type": "string",
      "enum": [
        "aaa",
        "aa_plus",
        "aa",
        "aa_minus",
        "a_plus",
        "a",
        "a_minus",
        "bbb_plus",
        "bbb",
        "bbb_minus",
        "bb_plus",
        "bb",
        "bb_minus",
        "b_plus",
        "b",
        "b_minus",
        "ccc_plus",
        "ccc",
        "ccc_minus",
        "cc",
        "c",
        "rd",
        "d"
      ]
    },
    "fitch_st": {
      "description": "Fitch short term credit ratings",
      "type": "string",
      "enum": [
        "f1_plus",
        "f1",
        "f2",
        "f3",
        "b",
        "c",
        "rd",
        "d"
      ]
    },
    "forbearance_date": {
      "description": "The date on which the first forbearance measure was granted to this product.  Format should be YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601",
      "type": "string",
      "format": "date-time"
    },
    "frr_id": {
      "description": "The internal facility risk rating assigned to a facility based on its specific risk characteristics, including collateral and seniority.",
      "type": "string"
    },
    "fvh_level": {
      "description": "Fair value hierarchy category according to IFRS 13.93 (b)",
      "type": "integer",
      "minimum": 1,
      "maximum": 3
    },
    "guarantee_start_date": {
      "description": "The first day the security became guaranteed by the guarantor. YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601",
      "type": "string",
      "format": "date-time"
    },
    "guarantor_id": {
      "description": "The unique identifier for the guarantor within the financial institution.",
      "type": "string"
    },
    "hedged_percentage": {
      "description": "In the case of a designated fair value hedge, the portion of the asset being hedged, as determined according to ASC 815-20-25-12 (b) and ASC 815-20-25-12A.",
      "type": "number",
      "minimum": 0,
      "maximum": 1
    },
    "hqla_class": {
      "description": "What is the HQLA classification of this security?",
      "type": "string",
      "enum": [
        "exclude",
        "i",
        "i_non_op",
        "iia",
        "iia_non_op",
        "iib",
        "iib_non_op",
        "ineligible",
        "ineligible_non_op"
      ]
    },
    "impairment_amount": {
      "description": "The impairment amount for a security is the allowance set aside by the firm for losses.",
      "type": "integer",
      "minimum": 0,
      "monetary": true
    },
    "impairment_date": {
      "description": "The date upon which the product became considered impaired. Format should be YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601",
      "type": "string",
      "format": "date-time"
    },
    "impairment_status": {
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/common.json#/impairment_status"
    },
    "index_composition": {
      "description": "Constituents and their proportion in an index.",
      "type": "array",
      "minItems": 1,
      "uniqueItems": true,
      "items": {
        "type": "object",
        "properties": {
          "reference_id": {
            "description": "The reference security id for the weight.",
            "type": "string"
          },
          "weight": {
            "description": "The proportion of the reference in the index. It is recorded in decimal format.",
            "type": "number",
            "minimum": 0,
            "maximum": 1
          }
        },
        "required": [
          "reference_id",
          "weight"
        ]
      }
    },
    "insolvency_rank": {
      "description": "The insolvency ranking as per the national legal fraamework of the reporting institution.",
      "type": "integer",
      "minimum": 1
    },
    "interest_repayment_frequency": {
      "description": "Repayment frequency of the interest.",
      "type": "string",
      "enum": [
        "daily",
        "weekly",
        "bi_weekly",
        "monthly",
        "bi_monthly",
        "quarterly",
        "semi_annually",
        "annually",
        "at_maturity",
        "biennially",
        "sesquiennially"
      ]
    },
    "isin_code": {
      "description": "The unique International Securities Identification Number for the security according to ISO 6166.",
      "type": "string",
      "minLength": 12,
      "maxLength": 12
    },
    "issuance_type": {
      "description": "Indicates the type of placement for issuances. For example, private placements, other non-publicly offered securites, publicly offered securities or direct purchase municipal securities. Refer to https://www.federalreserve.gov/apps/reportingforms/Report/Index/FR_Y-14Q for more information.",
      "type": "string",
      "enum": [
        "direct_purch_municipal",
        "non_public",
        "private_placement",
        "public_offering"
      ]
    },
    "issue_date": {
      "description": "The date on which the security is issued. YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601.",
      "type": "string",
      "format": "date-time"
    },
    "issue_size": {
      "description": "The size of the issue denominated in the original currency of the security",
      "type": "integer",
      "monetary": true
    },
    "issuer_id": {
      "description": "The unique identifier for the issuer within the financial institution.",
      "type": "string"
    },
    "kbra_lt": {
      "description": "KBRA long term credit ratings",
      "type": "string",
      "enum": [
        "aaa",
        "aa_plus",
        "aa",
        "aa_minus",
        "a_plus",
        "a",
        "a_minus",
        "bbb_plus",
        "bbb",
        "bbb_minus",
        "bb_plus",
        "bb",
        "bb_minus",
        "b_plus",
        "b",
        "b_minus",
        "ccc_plus",
        "ccc",
        "ccc_minus",
        "cc",
        "c",
        "d"
      ]
    },
    "kbra_st": {
      "description": "KBRA short term credit ratings",
      "type": "string",
      "enum": [
        "k1_plus",
        "k1",
        "k2",
        "k3",
        "b",
        "c",
        "d"
      ]
    },
    "last_payment_date": {
      "description": "The final payment date for interest payments, often coincides with end_date or the maturity date",
      "type": "string",
      "format": "date-time"
    },
    "ledger_code": {
      "description": "The internal ledger code or line item name.",
      "type": "string"
    },
    "lgd_floored": {
      "description": "The final LGD value after the relevant floors have been applied. To be used in the IRB RWA calculations.",
      "type": "number",
      "minimum": 0,
      "maximum": 1
    },
    "lgd_irb": {
      "description": "The loss given default as determined by internal ratings-based approach. Expressed as a percentage between 0 and 1. This value is used in regulatory capital calculations.",
      "type": "number",
      "minimum": 0,
      "maximum": 1
    },
    "maturity_date": {
      "description": "The date on which the principal repayment of the security is due. YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601.",
      "type": "string",
      "format": "date-time"
    },
    "mic_code": {
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/common.json#/mic_code"
    },
    "mna_id": {
      "description": "The unique identifier of the Master Netting Agreement this security falls under. Typically where used as derivatives collateral.",
      "type": "string"
    },
    "moodys_lt": {
      "description": "Moody's long term credit ratings",
      "type": "string",
      "enum": [
        "aaa",
        "aa1",
        "aa2",
        "aa3",
        "a1",
        "a2",
        "a3",
        "baa1",
        "baa2",
        "baa3",
        "ba1",
        "ba2",
        "ba3",
        "b1",
        "b2",
        "b3",
        "caa1",
        "caa2",
        "caa3",
        "ca",
        "c"
      ]
    },
    "moodys_st": {
      "description": "Moodys short term credit ratings",
      "type": "string",
      "enum": [
        "p1",
        "p2",
        "p3",
        "np"
      ]
    },
    "movement": {
      "description": "The movement parameter describes how the security arrived to the firm.",
      "type": "string",
      "enum": [
        "asset",
        "cash",
        "cb_omo",
        "debt_issue",
        "issuance",
        "other"
      ]
    },
    "mtm_clean": {
      "description": "The mark-to-market value of the security excluding interest. Monetary number of cents/pence.",
      "type": "integer",
      "monetary": true
    },
    "mtm_dirty": {
      "description": "The mark-to-market value of the security including interest. Monetary number of cents/pence.",
      "type": "integer",
      "monetary": true
    },
    "next_payment_date": {
      "description": "The next date at which interest will be paid or accrued_interest balance returned to zero.",
      "type": "string",
      "format": "date-time"
    },
    "next_repricing_date": {
      "description": "The date on which the interest rate of the security will be re-calculated. YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601.",
      "type": "string",
      "format": "date-time"
    },
    "notional_amount": {
      "description": "The notional value is the total amount of a security's underlying asset at its spot price. Monetary number of cents.",
      "type": "integer",
      "monetary": true
    },
    "on_balance_sheet": {
      "description": "Is the security reported on the balance sheet of the financial institution?",
      "type": "boolean"
    },
    "originator_id": {
      "description": "The unique identifier used by the financial institution to identify the originator of the security or securitisation.",
      "type": "string"
    },
    "pd_irb": {
      "description": "The probability of default as determined by internal ratings-based approach. Expressed as a percentage between 0 and 1. This value is used in regulatory capital calculations.",
      "type": "number",
      "minimum": 0,
      "maximum": 1
    },
    "prev_payment_date": {
      "description": "The most recent previous date at which interest was paid or accrued_interest balance returned to zero.",
      "type": "string",
      "format": "date-time"
    },
    "product_name": {
      "description": "The name of the product as given by the financial institution to be used for display and reference purposes.",
      "type": "string"
    },
    "purpose": {
      "description": "The purpose for which the security is being held.",
      "type": "string",
      "enum": [
        "aircraft_finance",
        "back_to_back",
        "collateral",
        "custody",
        "default_fund",
        "derivative_collateral",
        "independent_collateral_amount",
        "insurance",
        "investment",
        "investment_advice",
        "non_controlling",
        "ocir",
        "other",
        "portfolio_management",
        "reference",
        "share_capital",
        "single_collateral_pool",
        "trade_finance",
        "variation_margin"
      ]
    },
    "rate": {
      "description": "The full interest rate applied to the security notional in percentage terms. Note that this therefore includes the base_rate (ie. not the spread).",
      "type": "number"
    },
    "rate_type": {
      "description": "Describes the type of interest rate applied to the security.",
      "type": "string",
      "enum": [
        "combined",
        "fixed",
        "tracker",
        "variable"
      ]
    },
    "regulatory_book": {
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/common.json#/regulatory_book"
    },
    "rehypothecation": {
      "description": "Can the security be rehypothecated by the borrower?",
      "type": "boolean"
    },
    "repayment_type": {
      "description": "The repayment or amortisation mechanism of the security or securitisation.",
      "type": "string",
      "enum": [
        "other",
        "pr2s",
        "pr2s_abcp",
        "pr2s_non_abcp",
        "pro_rata",
        "sequential"
      ]
    },
    "reporting_entity_name": {
      "description": "The name of the reporting legal entity for display purposes.",
      "type": "string"
    },
    "reporting_id": {
      "description": "The internal ID for the legal entity under which the account is being reported.",
      "type": "string"
    },
    "retention_pct": {
      "description": "The percentage of the issuance retained by the issuer. e.g. 0.05 is 5%.",
      "type": "number"
    },
    "retention_type": {
      "description": "The repayment or amortisation mechanism of the security or securitisation.",
      "type": "string",
      "enum": [
        "exempted",
        "first_loss",
        "on_bs",
        "revolving",
        "vertical_nominal",
        "vertical_risk"
      ]
    },
    "reversion_date": {
      "description": "The timestamp that indicates the end of an initial period where the 'rate' is applied to a security. After this the interest is calculated using the 'reversion_rate'. YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601.",
      "type": "string",
      "format": "date-time"
    },
    "reversion_rate": {
      "description": "The rate to which the security will revert after the reversion date. Percentages represented as a decimal/float, so 1.5 implies 1.5%.",
      "type": "number"
    },
    "risk_country_code": {
      "description": "Two-letter country code describing where the risk for the security resides. In accordance with ISO 3166-1",
      "$ref": "https://raw.githubusercontent.com/SuadeLabs/fire/master/schemas/common.json#/country_code"
    },
    "risk_profile": {
      "description": "The evaluation of the financial risk associated to the portfolio",
      "type": "integer",
      "minimum": 1,
      "maximum": 10
    },
    "risk_weight_irb": {
      "description": "The internal risk weight represented as a decimal/float such that 1.5% is 0.015.",
      "type": "number"
    },
    "risk_weight_std": {
      "description": "The standardised approach risk weight represented as a decimal/float such that 1.5% is 0.015.",
      "type": "number"
    },
    "securitisation_type": {
      "description": "The type of securitisation with regards to common regulatory classifications.",
      "type": "string",
      "enum": [
        "pass_through",
        "sts",
        "sts_synthetic",
        "sts_traditional",
        "synthetic",
        "traditional"
      ]
    },
    "sedol": {
      "description": "The stock exchange daily official list (SEDOL) is a seven-character identification code assigned to securities that trade on the London Stock Exchange and various smaller exchanges in the United Kingdom. SEDOL codes are used for unit trusts, investment trusts, insurance-linked securities, and domestic and foreign stocks.",
      "type": "string"
    },
    "seniority": {
      "description": "The seniority of the security in the event of sale or bankruptcy of the issuer.",
      "type": "string",
      "enum": [
        "first_loss_secured",
        "senior_secured",
        "senior_unsecured",
        "subordinated_secured",
        "subordinated_unsecured"
      ]
    },
    "sft_type": {
      "description": "The sft_type parameter defines the transaction mechanism conducted for the SFT for this security product.",
      "type": "string",
      "enum": [
        "bond_borrow",
        "bond_loan",
        "buy_sell_back",
        "margin_loan",
        "repo",
        "rev_repo",
        "sell_buy_back",
        "stock_borrow",
        "stock_loan",
        "term_funding_scheme"
      ]
    },
    "snp_lt": {
      "description": "S&P long term credit ratings",
      "type": "string",
      "enum": [
        "aaa",
        "aa_plus",
        "aa",
        "aa_minus",
        "a_plus",
        "a",
        "a_minus",
        "bbb_plus",
        "bbb",
        "bbb_minus",
        "bb_plus",
        "bb",
        "bb_minus",
        "b_plus",
        "b",
        "b_minus",
        "ccc_plus",
        "ccc",
        "ccc_minus",
        "cc",
        "c",
        "d"
      ]
    },
    "snp_st": {
      "description": "S&P short term credit ratings",
      "type": "string",
      "enum": [
        "a1",
        "a2",
        "a3",
        "b",
        "c",
        "d"
      ]
    },
    "source": {
      "description": "The source(s) where this data originated. If more than one source needs to be stored for data lineage, it should be separated by a dash. eg. Source1-Source2",
      "type": "string"
    },
    "start_date": {
      "description": "The timestamp that the trade or financial product commences. YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601.",
      "type": "string",
      "format": "date-time"
    },
    "status": {
      "description": "Provides additional information regarding the status of the security.",
      "type": "string",
      "enum": [
        "bankruptcy_remote",
        "called_up",
        "free_deliveries",
        "non_operational",
        "paid_up",
        "unsettled"
      ]
    },
    "stress_change": {
      "description": "The level of variation on the security's price or haircut or during a 30 day calendar market stress period in percentage terms",
      "type": "number",
      "minimum": 0
    },
    "trade_date": {
      "description": "The timestamp that the trade or financial product terms are agreed. YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601.",
      "type": "string",
      "format": "date-time"
    },
    "transferable": {
      "description": "Can the security be transferred between parties or negotiated on the capital market?",
      "type": "boolean"
    },
    "type": {
      "description": "This is the type of the security with regards to common regulatory classifications.",
      "type": "string",
      "enum": [
        "abs",
        "abs_auto",
        "abs_cc",
        "abs_consumer",
        "abs_corp",
        "abs_lease",
        "abs_other",
        "abs_sme",
        "abs_sme_corp",
        "abs_sme_retail",
        "abs_trade_rec",
        "abs_wholesale",
        "acceptance",
        "bill_of_exchange",
        "bond",
        "cash",
        "cash_ratio_deposit",
        "cb_facility",
        "cb_reserve",
        "cb_restricted_reserve",
        "cd",
        "cmbs",
        "cmbs_income",
        "commercial_paper",
        "convertible_bond",
        "covered_bond",
        "debt",
        "dividend",
        "documentary",
        "emtn",
        "equity",
        "financial",
        "financial_guarantee",
        "financial_sloc",
        "frn",
        "guarantee",
        "index",
        "index_linked",
        "letter_of_credit",
        "loan_pool",
        "main_index_equity",
        "mbs",
        "mtn",
        "nha_mbs",
        "other",
        "performance",
        "performance_bond",
        "performance_guarantee",
        "performance_sloc",
        "pibs",
        "pref_share",
        "rmbs",
        "rmbs_income",
        "rmbs_trans",
        "share",
        "share_agg",
        "speculative_unlisted",
        "spv_mortgages",
        "spv_other",
        "standby",
        "struct_note",
        "treasury",
        "urp",
        "warranty"
      ]
    },
    "value_date": {
      "description": "The timestamp that the trade or financial product was valued. YYYY-MM-DDTHH:MM:SSZ in accordance with ISO 8601.",
      "type": "string",
      "format": "date-time"
    },
    "version_id": {
      "description": "The version identifier of the data such as the firm's internal batch identifier.",
      "type": "string"
    }
  },
  "required": [
    "id",
    "date"
  ],
  "additionalProperties": true
}>;

=======
import { z } from 'zod';

// Enums for regulatory data
export enum RegulatoryEventType {
  ANNOUNCEMENT = 'announcement',
  CONSULTATION = 'consultation',
  PUBLICATION = 'publication',
  DEADLINE = 'deadline',
  IMPLEMENTATION = 'implementation',
  ENFORCEMENT = 'enforcement',
  UPDATE = 'update',
  OTHER = 'other',
}

export enum RegulatoryEventPriority {
  CRITICAL = 'critical',
  HIGH = 'high',
  MEDIUM = 'medium',
  LOW = 'low',
}

export enum RegulatoryEventStatus {
  UPCOMING = 'upcoming',
  ACTIVE = 'active',
  PAST = 'past',
  DELAYED = 'delayed',
  CANCELLED = 'cancelled',
}

export enum RegulatoryCategory {
  FINANCIAL = 'financial',
  ENVIRONMENTAL = 'environmental',
  SOCIAL = 'social',
  GOVERNANCE = 'governance',
  COMPLIANCE = 'compliance',
  RISK = 'risk',
  REPORTING = 'reporting',
  DISCLOSURE = 'disclosure',
  OTHER = 'other',
}

export enum RegulatoryFramework {
  SFDR = 'sfdr',
  CSRD = 'csrd',
  TAXONOMY = 'taxonomy',
  FINANCIAL_CRIME = 'financial_crime',
  AML = 'aml',
  KYC = 'kyc',
  GDPR = 'gdpr',
  MIFID = 'mifid',
  EMIR = 'emir',
  AIFMD = 'aifmd',
  UCITS = 'ucits',
  SOLVENCY = 'solvency',
  BASEL = 'basel',
  IFRS = 'ifrs',
  OTHER = 'other',
}

export enum RegulatoryJurisdiction {
  EU = 'eu',
  UK = 'uk',
  US = 'us',
  CANADA = 'canada',
  SINGAPORE = 'singapore',
  AUSTRALIA = 'australia',
  CHINA = 'china',
  JAPAN = 'japan',
  UAE = 'uae',
  SAUDI_ARABIA = 'saudi_arabia',
  GLOBAL = 'global',
  OTHER = 'other',
}

// Zod schemas for validation
export const RegulatoryEventSchema = z.object({
  id: z.string(),
  title: z.string(),
  description: z.string(),
  type: z.nativeEnum(RegulatoryEventType),
  priority: z.nativeEnum(RegulatoryEventPriority),
  status: z.nativeEnum(RegulatoryEventStatus),
  category: z.nativeEnum(RegulatoryCategory),
  framework: z.nativeEnum(RegulatoryFramework),
  jurisdiction: z.nativeEnum(RegulatoryJurisdiction),
  source: z.string(),
  sourceUrl: z.string().url().optional(),
  publishedDate: z.string().or(z.date()),
  effectiveDate: z.string().or(z.date()).optional(),
  deadlineDate: z.string().or(z.date()).optional(),
  tags: z.array(z.string()).default([]),
  impactScore: z.number().min(0).max(100).optional(),
  relatedEvents: z.array(z.string()).default([]),
  metadata: z.record(z.string(), z.any()).optional(),
});

// TypeScript types derived from Zod schemas
export type RegulatoryEvent = z.infer<typeof RegulatoryEventSchema>;

// Type for normalized regulatory event (after processing)
export interface NormalizedRegulatoryEvent extends RegulatoryEvent {
  normalizedTitle: string;
  normalizedDescription: string;
  keyEntities: string[];
  keyRequirements: string[];
  aiSummary?: string;
  riskScore?: number;
  impactAreas?: string[];
  suggestedActions?: string[];
}

// Type for regulatory event source configuration
export interface RegulatorySourceConfig {
  id: string;
  name: string;
  url: string;
  type: 'api' | 'rss' | 'webscrape';
  jurisdiction: RegulatoryJurisdiction;
  frameworks: RegulatoryFramework[];
  fetchInterval: number; // in minutes
  enabled: boolean;
  requiresAuthentication: boolean;
  authConfig?: {
    type: 'apiKey' | 'oauth' | 'basic';
    credentials: Record<string, string>;
  };
  parsingConfig: {
    selector?: string;
    mapping: Record<string, string>;
    dateFormat?: string;
  };
}

// Type for regulatory event filter
export interface RegulatoryEventFilter {
  types?: RegulatoryEventType[];
  priorities?: RegulatoryEventPriority[];
  statuses?: RegulatoryEventStatus[];
  categories?: RegulatoryCategory[];
  frameworks?: RegulatoryFramework[];
  jurisdictions?: RegulatoryJurisdiction[];
  dateRange?: {
    start?: Date;
    end?: Date;
  };
  searchTerm?: string;
  tags?: string[];
  impactScoreRange?: {
    min?: number;
    max?: number;
  };
}

// Type for regulatory event statistics
export interface RegulatoryEventStats {
  total: number;
  byType: Record<RegulatoryEventType, number>;
  byPriority: Record<RegulatoryEventPriority, number>;
  byStatus: Record<RegulatoryEventStatus, number>;
  byCategory: Record<RegulatoryCategory, number>;
  byFramework: Record<RegulatoryFramework, number>;
  byJurisdiction: Record<RegulatoryJurisdiction, number>;
  byMonth: Record<string, number>;
}
>>>>>>> de919209d359d257e3868be5f4784c9ab85dce95
